from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.o as __o__
import py4godot.classes.p as __p__
import py4godot.classes.d as __d__
import py4godot.classes.D as __d__
import py4godot.classes.g as __g__
import py4godot.classes.A as __a__
import py4godot.classes.T as __t__
import py4godot.classes.y as __y__
import py4godot.classes.ResourceImporter as __resourceimporter__
import py4godot.classes.r as __r__
import py4godot.classes.c as __c__
import py4godot.classes.n as __n__
import py4godot.classes.S as __s__
import py4godot.classes.t as __t__
import py4godot.classes.e as __e__
import py4godot.classes.a as __a__
import py4godot.classes.i as __i__



class EditorImportPlugin(__resourceimporter__.ResourceImporter):

  @staticmethod
  def constructor()->EditorImportPlugin:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorImportPlugin:pass


  def _get_importer_name(self)->str: pass

  def _get_visible_name(self)->str: pass

  def _get_preset_count(self)->int: pass

  def _get_preset_name(self, preset_index:int)->str: pass

  def _get_recognized_extensions(self)->__core__.PackedStringArray: pass

  def _get_import_options(self, path:str, preset_index:int)->typedarray::Dictionary: pass

  def _get_save_extension(self)->str: pass

  def _get_resource_type(self)->str: pass

  def _get_priority(self)->float: pass

  def _get_import_order(self)->int: pass

  def _get_format_version(self)->int: pass

  def _get_option_visibility(self, path:str, option_name:__core__.StringName|str, options:__core__.Dictionary)->bool: pass

  def _import(self, source_file:str, save_path:str, options:__core__.Dictionary, platform_variants:__core__.Array, gen_files:__core__.Array)->int: pass

  def _can_import_threaded(self)->bool: pass

  def append_import_external_resource(self, path:str, custom_options:__core__.Dictionary= __core__.Dictionary.new0(), custom_importer:str= __core__.String.new0(), generator_parameters:object=None)->int: pass


