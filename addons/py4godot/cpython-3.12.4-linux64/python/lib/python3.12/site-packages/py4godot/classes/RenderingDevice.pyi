from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.F as __f__
import py4godot.classes.o as __o__
import py4godot.classes.RDPipelineMultisampleState as __rdpipelinemultisamplestate__
import py4godot.classes.c as __c__
import py4godot.classes.R as __r__
import py4godot.classes.V as __v__
import py4godot.classes.RDPipelineColorBlendState as __rdpipelinecolorblendstate__
import py4godot.classes.s as __s__
import py4godot.classes.RDPipelineDepthStencilState as __rdpipelinedepthstencilstate__
import py4godot.classes.z as __z__
import py4godot.classes.x as __x__
import py4godot.classes.y as __y__
import py4godot.classes.r as __r__
import py4godot.classes.n as __n__
import py4godot.classes.u as __u__
import py4godot.classes.S as __s__
import py4godot.classes.t as __t__
import py4godot.classes.k as __k__
import py4godot.classes.RDShaderSPIRV as __rdshaderspirv__
import py4godot.classes.RDPipelineRasterizationState as __rdpipelinerasterizationstate__
import py4godot.classes.i as __i__
import py4godot.classes.h as __h__
import py4godot.classes.P as __p__
import py4godot.classes.U as __u__
import py4godot.classes.RDTextureFormat as __rdtextureformat__
import py4godot.classes.d as __d__
import py4godot.classes.B as __b__
import py4godot.classes.f as __f__
import py4godot.classes.b as __b__
import py4godot.classes.m as __m__
import py4godot.classes.D as __d__
import py4godot.classes.e as __e__
import py4godot.classes.RDSamplerState as __rdsamplerstate__
import py4godot.classes.RDShaderSource as __rdshadersource__
import py4godot.classes.p as __p__
import py4godot.classes.RenderingDevice as __renderingdevice__
import py4godot.classes.A as __a__
import py4godot.classes.T as __t__
import py4godot.classes.l as __l__
import py4godot.classes.RDTextureView as __rdtextureview__
import py4godot.classes.I as __i__
import py4godot.classes.Object as __object__
import py4godot.classes.a as __a__
import py4godot.classes.C as __c__


class DeviceType:
  DEVICE_KIND_OTHER:int = 0
  DEVICE_KIND_INTEGRATED_GPU:int = 1
  DEVICE_KIND_DISCRETE_GPU:int = 2
  DEVICE_KIND_VIRTUAL_GPU:int = 3
  DEVICE_KIND_CPU:int = 4
  DEVICE_KIND_MAX:int = 5
class DriverResource:
  DRIVER_RESOURCE_LOGICAL_DEVICE:int = 0
  DRIVER_RESOURCE_PHYSICAL_DEVICE:int = 1
  DRIVER_RESOURCE_TOPMOST_OBJECT:int = 2
  DRIVER_RESOURCE_COMMAND_QUEUE:int = 3
  DRIVER_RESOURCE_QUEUE_FAMILY:int = 4
  DRIVER_RESOURCE_TEXTURE:int = 5
  DRIVER_RESOURCE_TEXTURE_VIEW:int = 6
  DRIVER_RESOURCE_TEXTURE_DATA_FORMAT:int = 7
  DRIVER_RESOURCE_SAMPLER:int = 8
  DRIVER_RESOURCE_UNIFORM_SET:int = 9
  DRIVER_RESOURCE_BUFFER:int = 10
  DRIVER_RESOURCE_COMPUTE_PIPELINE:int = 11
  DRIVER_RESOURCE_RENDER_PIPELINE:int = 12
  DRIVER_RESOURCE_VULKAN_DEVICE:int = 0
  DRIVER_RESOURCE_VULKAN_PHYSICAL_DEVICE:int = 1
  DRIVER_RESOURCE_VULKAN_INSTANCE:int = 2
  DRIVER_RESOURCE_VULKAN_QUEUE:int = 3
  DRIVER_RESOURCE_VULKAN_QUEUE_FAMILY_INDEX:int = 4
  DRIVER_RESOURCE_VULKAN_IMAGE:int = 5
  DRIVER_RESOURCE_VULKAN_IMAGE_VIEW:int = 6
  DRIVER_RESOURCE_VULKAN_IMAGE_NATIVE_TEXTURE_FORMAT:int = 7
  DRIVER_RESOURCE_VULKAN_SAMPLER:int = 8
  DRIVER_RESOURCE_VULKAN_DESCRIPTOR_SET:int = 9
  DRIVER_RESOURCE_VULKAN_BUFFER:int = 10
  DRIVER_RESOURCE_VULKAN_COMPUTE_PIPELINE:int = 11
  DRIVER_RESOURCE_VULKAN_RENDER_PIPELINE:int = 12
class DataFormat:
  DATA_FORMAT_R4G4_UNORM_PACK8:int = 0
  DATA_FORMAT_R4G4B4A4_UNORM_PACK16:int = 1
  DATA_FORMAT_B4G4R4A4_UNORM_PACK16:int = 2
  DATA_FORMAT_R5G6B5_UNORM_PACK16:int = 3
  DATA_FORMAT_B5G6R5_UNORM_PACK16:int = 4
  DATA_FORMAT_R5G5B5A1_UNORM_PACK16:int = 5
  DATA_FORMAT_B5G5R5A1_UNORM_PACK16:int = 6
  DATA_FORMAT_A1R5G5B5_UNORM_PACK16:int = 7
  DATA_FORMAT_R8_UNORM:int = 8
  DATA_FORMAT_R8_SNORM:int = 9
  DATA_FORMAT_R8_USCALED:int = 10
  DATA_FORMAT_R8_SSCALED:int = 11
  DATA_FORMAT_R8_UINT:int = 12
  DATA_FORMAT_R8_SINT:int = 13
  DATA_FORMAT_R8_SRGB:int = 14
  DATA_FORMAT_R8G8_UNORM:int = 15
  DATA_FORMAT_R8G8_SNORM:int = 16
  DATA_FORMAT_R8G8_USCALED:int = 17
  DATA_FORMAT_R8G8_SSCALED:int = 18
  DATA_FORMAT_R8G8_UINT:int = 19
  DATA_FORMAT_R8G8_SINT:int = 20
  DATA_FORMAT_R8G8_SRGB:int = 21
  DATA_FORMAT_R8G8B8_UNORM:int = 22
  DATA_FORMAT_R8G8B8_SNORM:int = 23
  DATA_FORMAT_R8G8B8_USCALED:int = 24
  DATA_FORMAT_R8G8B8_SSCALED:int = 25
  DATA_FORMAT_R8G8B8_UINT:int = 26
  DATA_FORMAT_R8G8B8_SINT:int = 27
  DATA_FORMAT_R8G8B8_SRGB:int = 28
  DATA_FORMAT_B8G8R8_UNORM:int = 29
  DATA_FORMAT_B8G8R8_SNORM:int = 30
  DATA_FORMAT_B8G8R8_USCALED:int = 31
  DATA_FORMAT_B8G8R8_SSCALED:int = 32
  DATA_FORMAT_B8G8R8_UINT:int = 33
  DATA_FORMAT_B8G8R8_SINT:int = 34
  DATA_FORMAT_B8G8R8_SRGB:int = 35
  DATA_FORMAT_R8G8B8A8_UNORM:int = 36
  DATA_FORMAT_R8G8B8A8_SNORM:int = 37
  DATA_FORMAT_R8G8B8A8_USCALED:int = 38
  DATA_FORMAT_R8G8B8A8_SSCALED:int = 39
  DATA_FORMAT_R8G8B8A8_UINT:int = 40
  DATA_FORMAT_R8G8B8A8_SINT:int = 41
  DATA_FORMAT_R8G8B8A8_SRGB:int = 42
  DATA_FORMAT_B8G8R8A8_UNORM:int = 43
  DATA_FORMAT_B8G8R8A8_SNORM:int = 44
  DATA_FORMAT_B8G8R8A8_USCALED:int = 45
  DATA_FORMAT_B8G8R8A8_SSCALED:int = 46
  DATA_FORMAT_B8G8R8A8_UINT:int = 47
  DATA_FORMAT_B8G8R8A8_SINT:int = 48
  DATA_FORMAT_B8G8R8A8_SRGB:int = 49
  DATA_FORMAT_A8B8G8R8_UNORM_PACK32:int = 50
  DATA_FORMAT_A8B8G8R8_SNORM_PACK32:int = 51
  DATA_FORMAT_A8B8G8R8_USCALED_PACK32:int = 52
  DATA_FORMAT_A8B8G8R8_SSCALED_PACK32:int = 53
  DATA_FORMAT_A8B8G8R8_UINT_PACK32:int = 54
  DATA_FORMAT_A8B8G8R8_SINT_PACK32:int = 55
  DATA_FORMAT_A8B8G8R8_SRGB_PACK32:int = 56
  DATA_FORMAT_A2R10G10B10_UNORM_PACK32:int = 57
  DATA_FORMAT_A2R10G10B10_SNORM_PACK32:int = 58
  DATA_FORMAT_A2R10G10B10_USCALED_PACK32:int = 59
  DATA_FORMAT_A2R10G10B10_SSCALED_PACK32:int = 60
  DATA_FORMAT_A2R10G10B10_UINT_PACK32:int = 61
  DATA_FORMAT_A2R10G10B10_SINT_PACK32:int = 62
  DATA_FORMAT_A2B10G10R10_UNORM_PACK32:int = 63
  DATA_FORMAT_A2B10G10R10_SNORM_PACK32:int = 64
  DATA_FORMAT_A2B10G10R10_USCALED_PACK32:int = 65
  DATA_FORMAT_A2B10G10R10_SSCALED_PACK32:int = 66
  DATA_FORMAT_A2B10G10R10_UINT_PACK32:int = 67
  DATA_FORMAT_A2B10G10R10_SINT_PACK32:int = 68
  DATA_FORMAT_R16_UNORM:int = 69
  DATA_FORMAT_R16_SNORM:int = 70
  DATA_FORMAT_R16_USCALED:int = 71
  DATA_FORMAT_R16_SSCALED:int = 72
  DATA_FORMAT_R16_UINT:int = 73
  DATA_FORMAT_R16_SINT:int = 74
  DATA_FORMAT_R16_SFLOAT:int = 75
  DATA_FORMAT_R16G16_UNORM:int = 76
  DATA_FORMAT_R16G16_SNORM:int = 77
  DATA_FORMAT_R16G16_USCALED:int = 78
  DATA_FORMAT_R16G16_SSCALED:int = 79
  DATA_FORMAT_R16G16_UINT:int = 80
  DATA_FORMAT_R16G16_SINT:int = 81
  DATA_FORMAT_R16G16_SFLOAT:int = 82
  DATA_FORMAT_R16G16B16_UNORM:int = 83
  DATA_FORMAT_R16G16B16_SNORM:int = 84
  DATA_FORMAT_R16G16B16_USCALED:int = 85
  DATA_FORMAT_R16G16B16_SSCALED:int = 86
  DATA_FORMAT_R16G16B16_UINT:int = 87
  DATA_FORMAT_R16G16B16_SINT:int = 88
  DATA_FORMAT_R16G16B16_SFLOAT:int = 89
  DATA_FORMAT_R16G16B16A16_UNORM:int = 90
  DATA_FORMAT_R16G16B16A16_SNORM:int = 91
  DATA_FORMAT_R16G16B16A16_USCALED:int = 92
  DATA_FORMAT_R16G16B16A16_SSCALED:int = 93
  DATA_FORMAT_R16G16B16A16_UINT:int = 94
  DATA_FORMAT_R16G16B16A16_SINT:int = 95
  DATA_FORMAT_R16G16B16A16_SFLOAT:int = 96
  DATA_FORMAT_R32_UINT:int = 97
  DATA_FORMAT_R32_SINT:int = 98
  DATA_FORMAT_R32_SFLOAT:int = 99
  DATA_FORMAT_R32G32_UINT:int = 100
  DATA_FORMAT_R32G32_SINT:int = 101
  DATA_FORMAT_R32G32_SFLOAT:int = 102
  DATA_FORMAT_R32G32B32_UINT:int = 103
  DATA_FORMAT_R32G32B32_SINT:int = 104
  DATA_FORMAT_R32G32B32_SFLOAT:int = 105
  DATA_FORMAT_R32G32B32A32_UINT:int = 106
  DATA_FORMAT_R32G32B32A32_SINT:int = 107
  DATA_FORMAT_R32G32B32A32_SFLOAT:int = 108
  DATA_FORMAT_R64_UINT:int = 109
  DATA_FORMAT_R64_SINT:int = 110
  DATA_FORMAT_R64_SFLOAT:int = 111
  DATA_FORMAT_R64G64_UINT:int = 112
  DATA_FORMAT_R64G64_SINT:int = 113
  DATA_FORMAT_R64G64_SFLOAT:int = 114
  DATA_FORMAT_R64G64B64_UINT:int = 115
  DATA_FORMAT_R64G64B64_SINT:int = 116
  DATA_FORMAT_R64G64B64_SFLOAT:int = 117
  DATA_FORMAT_R64G64B64A64_UINT:int = 118
  DATA_FORMAT_R64G64B64A64_SINT:int = 119
  DATA_FORMAT_R64G64B64A64_SFLOAT:int = 120
  DATA_FORMAT_B10G11R11_UFLOAT_PACK32:int = 121
  DATA_FORMAT_E5B9G9R9_UFLOAT_PACK32:int = 122
  DATA_FORMAT_D16_UNORM:int = 123
  DATA_FORMAT_X8_D24_UNORM_PACK32:int = 124
  DATA_FORMAT_D32_SFLOAT:int = 125
  DATA_FORMAT_S8_UINT:int = 126
  DATA_FORMAT_D16_UNORM_S8_UINT:int = 127
  DATA_FORMAT_D24_UNORM_S8_UINT:int = 128
  DATA_FORMAT_D32_SFLOAT_S8_UINT:int = 129
  DATA_FORMAT_BC1_RGB_UNORM_BLOCK:int = 130
  DATA_FORMAT_BC1_RGB_SRGB_BLOCK:int = 131
  DATA_FORMAT_BC1_RGBA_UNORM_BLOCK:int = 132
  DATA_FORMAT_BC1_RGBA_SRGB_BLOCK:int = 133
  DATA_FORMAT_BC2_UNORM_BLOCK:int = 134
  DATA_FORMAT_BC2_SRGB_BLOCK:int = 135
  DATA_FORMAT_BC3_UNORM_BLOCK:int = 136
  DATA_FORMAT_BC3_SRGB_BLOCK:int = 137
  DATA_FORMAT_BC4_UNORM_BLOCK:int = 138
  DATA_FORMAT_BC4_SNORM_BLOCK:int = 139
  DATA_FORMAT_BC5_UNORM_BLOCK:int = 140
  DATA_FORMAT_BC5_SNORM_BLOCK:int = 141
  DATA_FORMAT_BC6H_UFLOAT_BLOCK:int = 142
  DATA_FORMAT_BC6H_SFLOAT_BLOCK:int = 143
  DATA_FORMAT_BC7_UNORM_BLOCK:int = 144
  DATA_FORMAT_BC7_SRGB_BLOCK:int = 145
  DATA_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:int = 146
  DATA_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:int = 147
  DATA_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:int = 148
  DATA_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:int = 149
  DATA_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:int = 150
  DATA_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:int = 151
  DATA_FORMAT_EAC_R11_UNORM_BLOCK:int = 152
  DATA_FORMAT_EAC_R11_SNORM_BLOCK:int = 153
  DATA_FORMAT_EAC_R11G11_UNORM_BLOCK:int = 154
  DATA_FORMAT_EAC_R11G11_SNORM_BLOCK:int = 155
  DATA_FORMAT_ASTC_4x4_UNORM_BLOCK:int = 156
  DATA_FORMAT_ASTC_4x4_SRGB_BLOCK:int = 157
  DATA_FORMAT_ASTC_5x4_UNORM_BLOCK:int = 158
  DATA_FORMAT_ASTC_5x4_SRGB_BLOCK:int = 159
  DATA_FORMAT_ASTC_5x5_UNORM_BLOCK:int = 160
  DATA_FORMAT_ASTC_5x5_SRGB_BLOCK:int = 161
  DATA_FORMAT_ASTC_6x5_UNORM_BLOCK:int = 162
  DATA_FORMAT_ASTC_6x5_SRGB_BLOCK:int = 163
  DATA_FORMAT_ASTC_6x6_UNORM_BLOCK:int = 164
  DATA_FORMAT_ASTC_6x6_SRGB_BLOCK:int = 165
  DATA_FORMAT_ASTC_8x5_UNORM_BLOCK:int = 166
  DATA_FORMAT_ASTC_8x5_SRGB_BLOCK:int = 167
  DATA_FORMAT_ASTC_8x6_UNORM_BLOCK:int = 168
  DATA_FORMAT_ASTC_8x6_SRGB_BLOCK:int = 169
  DATA_FORMAT_ASTC_8x8_UNORM_BLOCK:int = 170
  DATA_FORMAT_ASTC_8x8_SRGB_BLOCK:int = 171
  DATA_FORMAT_ASTC_10x5_UNORM_BLOCK:int = 172
  DATA_FORMAT_ASTC_10x5_SRGB_BLOCK:int = 173
  DATA_FORMAT_ASTC_10x6_UNORM_BLOCK:int = 174
  DATA_FORMAT_ASTC_10x6_SRGB_BLOCK:int = 175
  DATA_FORMAT_ASTC_10x8_UNORM_BLOCK:int = 176
  DATA_FORMAT_ASTC_10x8_SRGB_BLOCK:int = 177
  DATA_FORMAT_ASTC_10x10_UNORM_BLOCK:int = 178
  DATA_FORMAT_ASTC_10x10_SRGB_BLOCK:int = 179
  DATA_FORMAT_ASTC_12x10_UNORM_BLOCK:int = 180
  DATA_FORMAT_ASTC_12x10_SRGB_BLOCK:int = 181
  DATA_FORMAT_ASTC_12x12_UNORM_BLOCK:int = 182
  DATA_FORMAT_ASTC_12x12_SRGB_BLOCK:int = 183
  DATA_FORMAT_G8B8G8R8_422_UNORM:int = 184
  DATA_FORMAT_B8G8R8G8_422_UNORM:int = 185
  DATA_FORMAT_G8_B8_R8_3PLANE_420_UNORM:int = 186
  DATA_FORMAT_G8_B8R8_2PLANE_420_UNORM:int = 187
  DATA_FORMAT_G8_B8_R8_3PLANE_422_UNORM:int = 188
  DATA_FORMAT_G8_B8R8_2PLANE_422_UNORM:int = 189
  DATA_FORMAT_G8_B8_R8_3PLANE_444_UNORM:int = 190
  DATA_FORMAT_R10X6_UNORM_PACK16:int = 191
  DATA_FORMAT_R10X6G10X6_UNORM_2PACK16:int = 192
  DATA_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16:int = 193
  DATA_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16:int = 194
  DATA_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16:int = 195
  DATA_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16:int = 196
  DATA_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16:int = 197
  DATA_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16:int = 198
  DATA_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16:int = 199
  DATA_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16:int = 200
  DATA_FORMAT_R12X4_UNORM_PACK16:int = 201
  DATA_FORMAT_R12X4G12X4_UNORM_2PACK16:int = 202
  DATA_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16:int = 203
  DATA_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16:int = 204
  DATA_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16:int = 205
  DATA_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16:int = 206
  DATA_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16:int = 207
  DATA_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16:int = 208
  DATA_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16:int = 209
  DATA_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16:int = 210
  DATA_FORMAT_G16B16G16R16_422_UNORM:int = 211
  DATA_FORMAT_B16G16R16G16_422_UNORM:int = 212
  DATA_FORMAT_G16_B16_R16_3PLANE_420_UNORM:int = 213
  DATA_FORMAT_G16_B16R16_2PLANE_420_UNORM:int = 214
  DATA_FORMAT_G16_B16_R16_3PLANE_422_UNORM:int = 215
  DATA_FORMAT_G16_B16R16_2PLANE_422_UNORM:int = 216
  DATA_FORMAT_G16_B16_R16_3PLANE_444_UNORM:int = 217
  DATA_FORMAT_MAX:int = 218
class BarrierMask:
  BARRIER_MASK_VERTEX:int = 1
  BARRIER_MASK_FRAGMENT:int = 8
  BARRIER_MASK_COMPUTE:int = 2
  BARRIER_MASK_TRANSFER:int = 4
  BARRIER_MASK_RASTER:int = 9
  BARRIER_MASK_ALL_BARRIERS:int = 32767
  BARRIER_MASK_NO_BARRIER:int = 32768
class TextureType:
  TEXTURE_KIND_1D:int = 0
  TEXTURE_KIND_2D:int = 1
  TEXTURE_KIND_3D:int = 2
  TEXTURE_KIND_CUBE:int = 3
  TEXTURE_KIND_1D_ARRAY:int = 4
  TEXTURE_KIND_2D_ARRAY:int = 5
  TEXTURE_KIND_CUBE_ARRAY:int = 6
  TEXTURE_KIND_MAX:int = 7
class TextureSamples:
  TEXTURE_SAMPLES_1:int = 0
  TEXTURE_SAMPLES_2:int = 1
  TEXTURE_SAMPLES_4:int = 2
  TEXTURE_SAMPLES_8:int = 3
  TEXTURE_SAMPLES_16:int = 4
  TEXTURE_SAMPLES_32:int = 5
  TEXTURE_SAMPLES_64:int = 6
  TEXTURE_SAMPLES_MAX:int = 7
class TextureUsageBits:
  TEXTURE_USAGE_SAMPLING_BIT:int = 1
  TEXTURE_USAGE_COLOR_ATTACHMENT_BIT:int = 2
  TEXTURE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT:int = 4
  TEXTURE_USAGE_STORAGE_BIT:int = 8
  TEXTURE_USAGE_STORAGE_ATOMIC_BIT:int = 16
  TEXTURE_USAGE_CPU_READ_BIT:int = 32
  TEXTURE_USAGE_CAN_UPDATE_BIT:int = 64
  TEXTURE_USAGE_CAN_COPY_FROM_BIT:int = 128
  TEXTURE_USAGE_CAN_COPY_TO_BIT:int = 256
  TEXTURE_USAGE_INPUT_ATTACHMENT_BIT:int = 512
class TextureSwizzle:
  TEXTURE_SWIZZLE_IDENTITY:int = 0
  TEXTURE_SWIZZLE_ZERO:int = 1
  TEXTURE_SWIZZLE_ONE:int = 2
  TEXTURE_SWIZZLE_R:int = 3
  TEXTURE_SWIZZLE_G:int = 4
  TEXTURE_SWIZZLE_B:int = 5
  TEXTURE_SWIZZLE_A:int = 6
  TEXTURE_SWIZZLE_MAX:int = 7
class TextureSliceType:
  TEXTURE_SLICE_2D:int = 0
  TEXTURE_SLICE_CUBEMAP:int = 1
  TEXTURE_SLICE_3D:int = 2
class SamplerFilter:
  SAMPLER_FILTER_NEAREST:int = 0
  SAMPLER_FILTER_LINEAR:int = 1
class SamplerRepeatMode:
  SAMPLER_REPEAT_MODE_REPEAT:int = 0
  SAMPLER_REPEAT_MODE_MIRRORED_REPEAT:int = 1
  SAMPLER_REPEAT_MODE_CLAMP_TO_EDGE:int = 2
  SAMPLER_REPEAT_MODE_CLAMP_TO_BORDER:int = 3
  SAMPLER_REPEAT_MODE_MIRROR_CLAMP_TO_EDGE:int = 4
  SAMPLER_REPEAT_MODE_MAX:int = 5
class SamplerBorderColor:
  SAMPLER_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK:int = 0
  SAMPLER_BORDER_COLOR_INT_TRANSPARENT_BLACK:int = 1
  SAMPLER_BORDER_COLOR_FLOAT_OPAQUE_BLACK:int = 2
  SAMPLER_BORDER_COLOR_INT_OPAQUE_BLACK:int = 3
  SAMPLER_BORDER_COLOR_FLOAT_OPAQUE_WHITE:int = 4
  SAMPLER_BORDER_COLOR_INT_OPAQUE_WHITE:int = 5
  SAMPLER_BORDER_COLOR_MAX:int = 6
class VertexFrequency:
  VERTEX_FREQUENCY_VERTEX:int = 0
  VERTEX_FREQUENCY_INSTANCE:int = 1
class IndexBufferFormat:
  INDEX_BUFFER_FORMAT_UINT16:int = 0
  INDEX_BUFFER_FORMAT_UINT32:int = 1
class StorageBufferUsage:
  STORAGE_BUFFER_USAGE_DISPATCH_INDIRECT:int = 1
class BufferCreationBits:
  BUFFER_CREATION_DEVICE_ADDRESS_BIT:int = 1
  BUFFER_CREATION_AS_STORAGE_BIT:int = 2
class UniformType:
  UNIFORM_KIND_SAMPLER:int = 0
  UNIFORM_KIND_SAMPLER_WITH_TEXTURE:int = 1
  UNIFORM_KIND_TEXTURE:int = 2
  UNIFORM_KIND_IMAGE:int = 3
  UNIFORM_KIND_TEXTURE_BUFFER:int = 4
  UNIFORM_KIND_SAMPLER_WITH_TEXTURE_BUFFER:int = 5
  UNIFORM_KIND_IMAGE_BUFFER:int = 6
  UNIFORM_KIND_UNIFORM_BUFFER:int = 7
  UNIFORM_KIND_STORAGE_BUFFER:int = 8
  UNIFORM_KIND_INPUT_ATTACHMENT:int = 9
  UNIFORM_KIND_MAX:int = 10
class RenderPrimitive:
  RENDER_PRIMITIVE_POINTS:int = 0
  RENDER_PRIMITIVE_LINES:int = 1
  RENDER_PRIMITIVE_LINES_WITH_ADJACENCY:int = 2
  RENDER_PRIMITIVE_LINESTRIPS:int = 3
  RENDER_PRIMITIVE_LINESTRIPS_WITH_ADJACENCY:int = 4
  RENDER_PRIMITIVE_TRIANGLES:int = 5
  RENDER_PRIMITIVE_TRIANGLES_WITH_ADJACENCY:int = 6
  RENDER_PRIMITIVE_TRIANGLE_STRIPS:int = 7
  RENDER_PRIMITIVE_TRIANGLE_STRIPS_WITH_AJACENCY:int = 8
  RENDER_PRIMITIVE_TRIANGLE_STRIPS_WITH_RESTART_INDEX:int = 9
  RENDER_PRIMITIVE_TESSELATION_PATCH:int = 10
  RENDER_PRIMITIVE_MAX:int = 11
class PolygonCullMode:
  POLYGON_CULL_DISABLED:int = 0
  POLYGON_CULL_FRONT:int = 1
  POLYGON_CULL_BACK:int = 2
class PolygonFrontFace:
  POLYGON_FRONT_FACE_CLOCKWISE:int = 0
  POLYGON_FRONT_FACE_COUNTER_CLOCKWISE:int = 1
class StencilOperation:
  STENCIL_OPERATOR_KEEP:int = 0
  STENCIL_OPERATOR_ZERO:int = 1
  STENCIL_OPERATOR_REPLACE:int = 2
  STENCIL_OPERATOR_INCREMENT_AND_CLAMP:int = 3
  STENCIL_OPERATOR_DECREMENT_AND_CLAMP:int = 4
  STENCIL_OPERATOR_INVERT:int = 5
  STENCIL_OPERATOR_INCREMENT_AND_WRAP:int = 6
  STENCIL_OPERATOR_DECREMENT_AND_WRAP:int = 7
  STENCIL_OPERATOR_MAX:int = 8
class CompareOperator:
  COMPARE_OPERATOR_NEVER:int = 0
  COMPARE_OPERATOR_LESS:int = 1
  COMPARE_OPERATOR_EQUAL:int = 2
  COMPARE_OPERATOR_LESS_OR_EQUAL:int = 3
  COMPARE_OPERATOR_GREATER:int = 4
  COMPARE_OPERATOR_NOT_EQUAL:int = 5
  COMPARE_OPERATOR_GREATER_OR_EQUAL:int = 6
  COMPARE_OPERATOR_ALWAYS:int = 7
  COMPARE_OPERATOR_MAX:int = 8
class LogicOperation:
  LOGIC_OPERATOR_CLEAR:int = 0
  LOGIC_OPERATOR_AND:int = 1
  LOGIC_OPERATOR_AND_REVERSE:int = 2
  LOGIC_OPERATOR_COPY:int = 3
  LOGIC_OPERATOR_AND_INVERTED:int = 4
  LOGIC_OPERATOR_NO_OP:int = 5
  LOGIC_OPERATOR_XOR:int = 6
  LOGIC_OPERATOR_OR:int = 7
  LOGIC_OPERATOR_NOR:int = 8
  LOGIC_OPERATOR_EQUIVALENT:int = 9
  LOGIC_OPERATOR_INVERT:int = 10
  LOGIC_OPERATOR_OR_REVERSE:int = 11
  LOGIC_OPERATOR_COPY_INVERTED:int = 12
  LOGIC_OPERATOR_OR_INVERTED:int = 13
  LOGIC_OPERATOR_NAND:int = 14
  LOGIC_OPERATOR_SET:int = 15
  LOGIC_OPERATOR_MAX:int = 16
class BlendFactor:
  BLEND_FACTOR_ZERO:int = 0
  BLEND_FACTOR_ONE:int = 1
  BLEND_FACTOR_SRC_COLOR:int = 2
  BLEND_FACTOR_ONE_MINUS_SRC_COLOR:int = 3
  BLEND_FACTOR_DST_COLOR:int = 4
  BLEND_FACTOR_ONE_MINUS_DST_COLOR:int = 5
  BLEND_FACTOR_SRC_ALPHA:int = 6
  BLEND_FACTOR_ONE_MINUS_SRC_ALPHA:int = 7
  BLEND_FACTOR_DST_ALPHA:int = 8
  BLEND_FACTOR_ONE_MINUS_DST_ALPHA:int = 9
  BLEND_FACTOR_CONSTANT_COLOR:int = 10
  BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR:int = 11
  BLEND_FACTOR_CONSTANT_ALPHA:int = 12
  BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA:int = 13
  BLEND_FACTOR_SRC_ALPHA_SATURATE:int = 14
  BLEND_FACTOR_SRC1_COLOR:int = 15
  BLEND_FACTOR_ONE_MINUS_SRC1_COLOR:int = 16
  BLEND_FACTOR_SRC1_ALPHA:int = 17
  BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA:int = 18
  BLEND_FACTOR_MAX:int = 19
class BlendOperation:
  BLEND_OPERATOR_ADD:int = 0
  BLEND_OPERATOR_SUBTRACT:int = 1
  BLEND_OPERATOR_REVERSE_SUBTRACT:int = 2
  BLEND_OPERATOR_MINIMUM:int = 3
  BLEND_OPERATOR_MAXIMUM:int = 4
  BLEND_OPERATOR_MAX:int = 5
class PipelineDynamicStateFlags:
  DYNAMIC_STATE_LINE_WIDTH:int = 1
  DYNAMIC_STATE_DEPTH_BIAS:int = 2
  DYNAMIC_STATE_BLEND_CONSTANTS:int = 4
  DYNAMIC_STATE_DEPTH_BOUNDS:int = 8
  DYNAMIC_STATE_STENCIL_COMPARE_MASK:int = 16
  DYNAMIC_STATE_STENCIL_WRITE_MASK:int = 32
  DYNAMIC_STATE_STENCIL_REFERENCE:int = 64
class InitialAction:
  INITIAL_ACTION_LOAD:int = 0
  INITIAL_ACTION_CLEAR:int = 1
  INITIAL_ACTION_DISCARD:int = 2
  INITIAL_ACTION_MAX:int = 3
  INITIAL_ACTION_CLEAR_REGION:int = 1
  INITIAL_ACTION_CLEAR_REGION_CONTINUE:int = 1
  INITIAL_ACTION_KEEP:int = 0
  INITIAL_ACTION_DROP:int = 2
  INITIAL_ACTION_CONTINUE:int = 0
class FinalAction:
  FINAL_ACTION_STORE:int = 0
  FINAL_ACTION_DISCARD:int = 1
  FINAL_ACTION_MAX:int = 2
  FINAL_ACTION_READ:int = 0
  FINAL_ACTION_CONTINUE:int = 0
class ShaderStage:
  SHADER_STAGE_VERTEX:int = 0
  SHADER_STAGE_FRAGMENT:int = 1
  SHADER_STAGE_TESSELATION_CONTROL:int = 2
  SHADER_STAGE_TESSELATION_EVALUATION:int = 3
  SHADER_STAGE_COMPUTE:int = 4
  SHADER_STAGE_MAX:int = 5
  SHADER_STAGE_VERTEX_BIT:int = 1
  SHADER_STAGE_FRAGMENT_BIT:int = 2
  SHADER_STAGE_TESSELATION_CONTROL_BIT:int = 4
  SHADER_STAGE_TESSELATION_EVALUATION_BIT:int = 8
  SHADER_STAGE_COMPUTE_BIT:int = 16
class ShaderLanguage:
  SHADER_LANGUAGE_GLSL:int = 0
  SHADER_LANGUAGE_HLSL:int = 1
class PipelineSpecializationConstantType:
  PIPELINE_SPECIALIZATION_CONSTANT_KIND_BOOL:int = 0
  PIPELINE_SPECIALIZATION_CONSTANT_KIND_INT:int = 1
  PIPELINE_SPECIALIZATION_CONSTANT_KIND_FLOAT:int = 2
class Features:
  SUPPORTS_BUFFER_DEVICE_ADDRESS:int = 6
class Limit:
  LIMIT_MAX_BOUND_UNIFORM_SETS:int = 0
  LIMIT_MAX_FRAMEBUFFER_COLOR_ATTACHMENTS:int = 1
  LIMIT_MAX_TEXTURES_PER_UNIFORM_SET:int = 2
  LIMIT_MAX_SAMPLERS_PER_UNIFORM_SET:int = 3
  LIMIT_MAX_STORAGE_BUFFERS_PER_UNIFORM_SET:int = 4
  LIMIT_MAX_STORAGE_IMAGES_PER_UNIFORM_SET:int = 5
  LIMIT_MAX_UNIFORM_BUFFERS_PER_UNIFORM_SET:int = 6
  LIMIT_MAX_DRAW_INDEXED_INDEX:int = 7
  LIMIT_MAX_FRAMEBUFFER_HEIGHT:int = 8
  LIMIT_MAX_FRAMEBUFFER_WIDTH:int = 9
  LIMIT_MAX_TEXTURE_ARRAY_LAYERS:int = 10
  LIMIT_MAX_TEXTURE_SIZE_1D:int = 11
  LIMIT_MAX_TEXTURE_SIZE_2D:int = 12
  LIMIT_MAX_TEXTURE_SIZE_3D:int = 13
  LIMIT_MAX_TEXTURE_SIZE_CUBE:int = 14
  LIMIT_MAX_TEXTURES_PER_SHADER_STAGE:int = 15
  LIMIT_MAX_SAMPLERS_PER_SHADER_STAGE:int = 16
  LIMIT_MAX_STORAGE_BUFFERS_PER_SHADER_STAGE:int = 17
  LIMIT_MAX_STORAGE_IMAGES_PER_SHADER_STAGE:int = 18
  LIMIT_MAX_UNIFORM_BUFFERS_PER_SHADER_STAGE:int = 19
  LIMIT_MAX_PUSH_CONSTANT_SIZE:int = 20
  LIMIT_MAX_UNIFORM_BUFFER_SIZE:int = 21
  LIMIT_MAX_VERTEX_INPUT_ATTRIBUTE_OFFSET:int = 22
  LIMIT_MAX_VERTEX_INPUT_ATTRIBUTES:int = 23
  LIMIT_MAX_VERTEX_INPUT_BINDINGS:int = 24
  LIMIT_MAX_VERTEX_INPUT_BINDING_STRIDE:int = 25
  LIMIT_MIN_UNIFORM_BUFFER_OFFSET_ALIGNMENT:int = 26
  LIMIT_MAX_COMPUTE_SHARED_MEMORY_SIZE:int = 27
  LIMIT_MAX_COMPUTE_WORKGROUP_COUNT_X:int = 28
  LIMIT_MAX_COMPUTE_WORKGROUP_COUNT_Y:int = 29
  LIMIT_MAX_COMPUTE_WORKGROUP_COUNT_Z:int = 30
  LIMIT_MAX_COMPUTE_WORKGROUP_INVOCATIONS:int = 31
  LIMIT_MAX_COMPUTE_WORKGROUP_SIZE_X:int = 32
  LIMIT_MAX_COMPUTE_WORKGROUP_SIZE_Y:int = 33
  LIMIT_MAX_COMPUTE_WORKGROUP_SIZE_Z:int = 34
  LIMIT_MAX_VIEWPORT_DIMENSIONS_X:int = 35
  LIMIT_MAX_VIEWPORT_DIMENSIONS_Y:int = 36
  LIMIT_METALFX_TEMPORAL_SCALER_MIN_SCALE:int = 46
  LIMIT_METALFX_TEMPORAL_SCALER_MAX_SCALE:int = 47
class MemoryType:
  MEMORY_TEXTURES:int = 0
  MEMORY_BUFFERS:int = 1
  MEMORY_TOTAL:int = 2
class BreadcrumbMarker:
  NONE:int = 0
  REFLECTION_PROBES:int = 65536
  SKY_PASS:int = 131072
  LIGHTMAPPER_PASS:int = 196608
  SHADOW_PASS_DIRECTIONAL:int = 262144
  SHADOW_PASS_CUBE:int = 327680
  OPAQUE_PASS:int = 393216
  ALPHA_PASS:int = 458752
  TRANSPARENT_PASS:int = 524288
  POST_PROCESSING_PASS:int = 589824
  BLIT_PASS:int = 655360
  UI_PASS:int = 720896
  DEBUG_PASS:int = 786432
class DrawFlags:
  DRAW_DEFAULT_ALL:int = 0
  DRAW_CLEAR_COLOR_0:int = 1
  DRAW_CLEAR_COLOR_1:int = 2
  DRAW_CLEAR_COLOR_2:int = 4
  DRAW_CLEAR_COLOR_3:int = 8
  DRAW_CLEAR_COLOR_4:int = 16
  DRAW_CLEAR_COLOR_5:int = 32
  DRAW_CLEAR_COLOR_6:int = 64
  DRAW_CLEAR_COLOR_7:int = 128
  DRAW_CLEAR_COLOR_MASK:int = 255
  DRAW_CLEAR_COLOR_ALL:int = 255
  DRAW_IGNORE_COLOR_0:int = 256
  DRAW_IGNORE_COLOR_1:int = 512
  DRAW_IGNORE_COLOR_2:int = 1024
  DRAW_IGNORE_COLOR_3:int = 2048
  DRAW_IGNORE_COLOR_4:int = 4096
  DRAW_IGNORE_COLOR_5:int = 8192
  DRAW_IGNORE_COLOR_6:int = 16384
  DRAW_IGNORE_COLOR_7:int = 32768
  DRAW_IGNORE_COLOR_MASK:int = 65280
  DRAW_IGNORE_COLOR_ALL:int = 65280
  DRAW_CLEAR_DEPTH:int = 65536
  DRAW_IGNORE_DEPTH:int = 131072
  DRAW_CLEAR_STENCIL:int = 262144
  DRAW_IGNORE_STENCIL:int = 524288
  DRAW_CLEAR_ALL:int = 327935
  DRAW_IGNORE_ALL:int = 720640


class RenderingDevice(__object__.Object):

  @staticmethod
  def constructor()->RenderingDevice:pass



  @staticmethod
  def cast(other:__object__.Object)->RenderingDevice:pass


  def texture_create(self, format:__rdtextureformat__.RDTextureFormat, view:__rdtextureview__.RDTextureView, data:__core__.Array=[])->__core__.RID: pass

  def texture_create_shared(self, view:__rdtextureview__.RDTextureView, with_texture:__core__.RID)->__core__.RID: pass

  def texture_create_shared_from_slice(self, view:__rdtextureview__.RDTextureView, with_texture:__core__.RID, layer:int, mipmap:int, mipmaps:int=1, slice_type:int =0)->__core__.RID: pass

  def texture_create_from_extension(self, type:int , format:int , samples:int , usage_flags:int, image:int, width:int, height:int, depth:int, layers:int)->__core__.RID: pass

  def texture_update(self, texture:__core__.RID, layer:int, data:__core__.PackedByteArray)->int: pass

  def texture_get_data(self, texture:__core__.RID, layer:int)->__core__.PackedByteArray: pass

  def texture_get_data_async(self, texture:__core__.RID, layer:int, callback:__core__.Callable)->int: pass

  def texture_is_format_supported_for_usage(self, format:int , usage_flags:int)->bool: pass

  def texture_is_shared(self, texture:__core__.RID)->bool: pass

  def texture_is_valid(self, texture:__core__.RID)->bool: pass

  def texture_set_discardable(self, texture:__core__.RID, discardable:bool)->None: pass

  def texture_is_discardable(self, texture:__core__.RID)->bool: pass

  def texture_copy(self, from_texture:__core__.RID, to_texture:__core__.RID, from_pos:__core__.Vector3, to_pos:__core__.Vector3, size:__core__.Vector3, src_mipmap:int, dst_mipmap:int, src_layer:int, dst_layer:int)->int: pass

  def texture_clear(self, texture:__core__.RID, color:__core__.Color, base_mipmap:int, mipmap_count:int, base_layer:int, layer_count:int)->int: pass

  def texture_resolve_multisample(self, from_texture:__core__.RID, to_texture:__core__.RID)->int: pass

  def texture_get_format(self, texture:__core__.RID)->__rdtextureformat__.RDTextureFormat: pass

  def texture_get_native_handle(self, texture:__core__.RID)->int: pass

  def framebuffer_format_create(self, attachments:__core__.Array, view_count:int=1)->int: pass

  def framebuffer_format_create_multipass(self, attachments:__core__.Array, passes:__core__.Array, view_count:int=1)->int: pass

  def framebuffer_format_create_empty(self, samples:int =0)->int: pass

  def framebuffer_format_get_texture_samples(self, format:int, render_pass:int=0)->int: pass

  def framebuffer_create(self, textures:__core__.Array, validate_with_format:int=-1, view_count:int=1)->__core__.RID: pass

  def framebuffer_create_multipass(self, textures:__core__.Array, passes:__core__.Array, validate_with_format:int=-1, view_count:int=1)->__core__.RID: pass

  def framebuffer_create_empty(self, size:__core__.Vector2i, samples:int =0, validate_with_format:int=-1)->__core__.RID: pass

  def framebuffer_get_format(self, framebuffer:__core__.RID)->int: pass

  def framebuffer_is_valid(self, framebuffer:__core__.RID)->bool: pass

  def sampler_create(self, state:__rdsamplerstate__.RDSamplerState)->__core__.RID: pass

  def sampler_is_format_supported_for_filter(self, format:int , sampler_filter:int )->bool: pass

  def vertex_buffer_create(self, size_bytes:int, data:__core__.PackedByteArray= __core__.PackedByteArray.new0(), creation_bits:int=0)->__core__.RID: pass

  def vertex_format_create(self, vertex_descriptions:__core__.Array)->int: pass

  def vertex_array_create(self, vertex_count:int, vertex_format:int, src_buffers:__core__.Array, offsets:__core__.PackedInt64Array= __core__.PackedInt64Array.new0())->__core__.RID: pass

  def index_buffer_create(self, size_indices:int, format:int , data:__core__.PackedByteArray= __core__.PackedByteArray.new0(), use_restart_indices:bool=False, creation_bits:int=0)->__core__.RID: pass

  def index_array_create(self, index_buffer:__core__.RID, index_offset:int, index_count:int)->__core__.RID: pass

  def shader_compile_spirv_from_source(self, shader_source:__rdshadersource__.RDShaderSource, allow_cache:bool=True)->__rdshaderspirv__.RDShaderSPIRV: pass

  def shader_compile_binary_from_spirv(self, spirv_data:__rdshaderspirv__.RDShaderSPIRV, name:str= __core__.String.new0())->__core__.PackedByteArray: pass

  def shader_create_from_spirv(self, spirv_data:__rdshaderspirv__.RDShaderSPIRV, name:str= __core__.String.new0())->__core__.RID: pass

  def shader_create_from_bytecode(self, binary_data:__core__.PackedByteArray, placeholder_rid:__core__.RID= __core__.RID.new0())->__core__.RID: pass

  def shader_create_placeholder(self)->__core__.RID: pass

  def shader_get_vertex_input_attribute_mask(self, shader:__core__.RID)->int: pass

  def uniform_buffer_create(self, size_bytes:int, data:__core__.PackedByteArray= __core__.PackedByteArray.new0(), creation_bits:int=0)->__core__.RID: pass

  def storage_buffer_create(self, size_bytes:int, data:__core__.PackedByteArray= __core__.PackedByteArray.new0(), usage:int=0, creation_bits:int=0)->__core__.RID: pass

  def texture_buffer_create(self, size_bytes:int, format:int , data:__core__.PackedByteArray= __core__.PackedByteArray.new0())->__core__.RID: pass

  def uniform_set_create(self, uniforms:__core__.Array, shader:__core__.RID, shader_set:int)->__core__.RID: pass

  def uniform_set_is_valid(self, uniform_set:__core__.RID)->bool: pass

  def buffer_copy(self, src_buffer:__core__.RID, dst_buffer:__core__.RID, src_offset:int, dst_offset:int, size:int)->int: pass

  def buffer_update(self, buffer:__core__.RID, offset:int, size_bytes:int, data:__core__.PackedByteArray)->int: pass

  def buffer_clear(self, buffer:__core__.RID, offset:int, size_bytes:int)->int: pass

  def buffer_get_data(self, buffer:__core__.RID, offset_bytes:int=0, size_bytes:int=0)->__core__.PackedByteArray: pass

  def buffer_get_data_async(self, buffer:__core__.RID, callback:__core__.Callable, offset_bytes:int=0, size_bytes:int=0)->int: pass

  def buffer_get_device_address(self, buffer:__core__.RID)->int: pass

  def render_pipeline_create(self, shader:__core__.RID, framebuffer_format:int, vertex_format:int, primitive:int , rasterization_state:__rdpipelinerasterizationstate__.RDPipelineRasterizationState, multisample_state:__rdpipelinemultisamplestate__.RDPipelineMultisampleState, stencil_state:__rdpipelinedepthstencilstate__.RDPipelineDepthStencilState, color_blend_state:__rdpipelinecolorblendstate__.RDPipelineColorBlendState, dynamic_state_flags:int=0, for_render_pass:int=0, specialization_constants:__core__.Array=Array[RDPipelineSpecializationConstant]([]))->__core__.RID: pass

  def render_pipeline_is_valid(self, render_pipeline:__core__.RID)->bool: pass

  def compute_pipeline_create(self, shader:__core__.RID, specialization_constants:__core__.Array=Array[RDPipelineSpecializationConstant]([]))->__core__.RID: pass

  def compute_pipeline_is_valid(self, compute_pipeline:__core__.RID)->bool: pass

  def screen_get_width(self, screen:int=0)->int: pass

  def screen_get_height(self, screen:int=0)->int: pass

  def screen_get_framebuffer_format(self, screen:int=0)->int: pass

  def draw_list_begin_for_screen(self, screen:int=0, clear_color:__core__.Color= __core__.Color.new0())->int: pass

  def draw_list_begin(self, framebuffer:__core__.RID, draw_flags:int=0, clear_color_values:__core__.PackedColorArray= __core__.PackedColorArray.new0(), clear_depth_value:float=1.0, clear_stencil_value:int=0, region:__core__.Rect2= __core__.Rect2.new0(), breadcrumb:int=0)->int: pass

  def draw_list_begin_split(self, framebuffer:__core__.RID, splits:int, initial_color_action:int , final_color_action:int , initial_depth_action:int , final_depth_action:int , clear_color_values:__core__.PackedColorArray= __core__.PackedColorArray.new0(), clear_depth:float=1.0, clear_stencil:int=0, region:__core__.Rect2= __core__.Rect2.new0(), storage_textures:__core__.Array=Array[RID]([]))->__core__.PackedInt64Array: pass

  def draw_list_set_blend_constants(self, draw_list:int, color:__core__.Color)->None: pass

  def draw_list_bind_render_pipeline(self, draw_list:int, render_pipeline:__core__.RID)->None: pass

  def draw_list_bind_uniform_set(self, draw_list:int, uniform_set:__core__.RID, set_index:int)->None: pass

  def draw_list_bind_vertex_array(self, draw_list:int, vertex_array:__core__.RID)->None: pass

  def draw_list_bind_index_array(self, draw_list:int, index_array:__core__.RID)->None: pass

  def draw_list_set_push_constant(self, draw_list:int, buffer:__core__.PackedByteArray, size_bytes:int)->None: pass

  def draw_list_draw(self, draw_list:int, use_indices:bool, instances:int, procedural_vertex_count:int=0)->None: pass

  def draw_list_draw_indirect(self, draw_list:int, use_indices:bool, buffer:__core__.RID, offset:int=0, draw_count:int=1, stride:int=0)->None: pass

  def draw_list_enable_scissor(self, draw_list:int, rect:__core__.Rect2= __core__.Rect2.new0())->None: pass

  def draw_list_disable_scissor(self, draw_list:int)->None: pass

  def draw_list_switch_to_next_pass(self)->int: pass

  def draw_list_switch_to_next_pass_split(self, splits:int)->__core__.PackedInt64Array: pass

  def draw_list_end(self)->None: pass

  def compute_list_begin(self)->int: pass

  def compute_list_bind_compute_pipeline(self, compute_list:int, compute_pipeline:__core__.RID)->None: pass

  def compute_list_set_push_constant(self, compute_list:int, buffer:__core__.PackedByteArray, size_bytes:int)->None: pass

  def compute_list_bind_uniform_set(self, compute_list:int, uniform_set:__core__.RID, set_index:int)->None: pass

  def compute_list_dispatch(self, compute_list:int, x_groups:int, y_groups:int, z_groups:int)->None: pass

  def compute_list_dispatch_indirect(self, compute_list:int, buffer:__core__.RID, offset:int)->None: pass

  def compute_list_add_barrier(self, compute_list:int)->None: pass

  def compute_list_end(self)->None: pass

  def free_rid(self, rid:__core__.RID)->None: pass

  def capture_timestamp(self, name:str)->None: pass

  def get_captured_timestamps_count(self)->int: pass

  def get_captured_timestamps_frame(self)->int: pass

  def get_captured_timestamp_gpu_time(self, index:int)->int: pass

  def get_captured_timestamp_cpu_time(self, index:int)->int: pass

  def get_captured_timestamp_name(self, index:int)->str: pass

  def has_feature(self, feature:int )->bool: pass

  def limit_get(self, limit:int )->int: pass

  def get_frame_delay(self)->int: pass

  def submit(self)->None: pass

  def sync(self)->None: pass

  def barrier(self, from_:int=32767, to:int=32767)->None: pass

  def full_barrier(self)->None: pass

  def create_local_device(self)->__renderingdevice__.RenderingDevice: pass

  def set_resource_name(self, id:__core__.RID, name:str)->None: pass

  def draw_command_begin_label(self, name:str, color:__core__.Color)->None: pass

  def draw_command_insert_label(self, name:str, color:__core__.Color)->None: pass

  def draw_command_end_label(self)->None: pass

  def get_device_vendor_name(self)->str: pass

  def get_device_name(self)->str: pass

  def get_device_pipeline_cache_uuid(self)->str: pass

  def get_memory_usage(self, type:int )->int: pass

  def get_driver_resource(self, resource:int , rid:__core__.RID, index:int)->int: pass

  def get_perf_report(self)->str: pass

  def get_driver_and_device_memory_report(self)->str: pass

  def get_tracked_object_name(self, type_index:int)->str: pass

  def get_tracked_object_type_count(self)->int: pass

  def get_driver_total_memory(self)->int: pass

  def get_driver_allocation_count(self)->int: pass

  def get_driver_memory_by_object_type(self, type:int)->int: pass

  def get_driver_allocs_by_object_type(self, type:int)->int: pass

  def get_device_total_memory(self)->int: pass

  def get_device_allocation_count(self)->int: pass

  def get_device_memory_by_object_type(self, type:int)->int: pass

  def get_device_allocs_by_object_type(self, type:int)->int: pass


