from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.EditorSyntaxHighlighter as __editorsyntaxhighlighter__
import py4godot.classes.GDScript as __gdscript__
import py4godot.classes.o as __o__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.c as __c__
import py4godot.classes.s as __s__
import py4godot.classes.Script as __script__
import py4godot.classes.E as __e__
import py4godot.classes.y as __y__
import py4godot.classes.r as __r__
import py4godot.classes.S as __s__
import py4godot.classes.t as __t__
import py4godot.classes.i as __i__
import py4godot.classes.d as __d__
import py4godot.classes.B as __b__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.e as __e__
import py4godot.classes.p as __p__
import py4godot.classes.A as __a__
import py4godot.classes.T as __t__
import py4godot.classes.ScriptExtension as __scriptextension__
import py4godot.classes.a as __a__



class ScriptEditor(__panelcontainer__.PanelContainer):
  editor_script_changed: BuiltinSignal
  script_close: BuiltinSignal

  @staticmethod
  def constructor()->ScriptEditor:pass



  @staticmethod
  def cast(other:__object__.Object)->ScriptEditor:pass


  def get_current_editor(self)->__scripteditorbase__.ScriptEditorBase: pass

  def get_open_script_editors(self)->typedarray::ScriptEditorBase: pass

  def get_breakpoints(self)->__core__.PackedStringArray: pass

  def register_syntax_highlighter(self, syntax_highlighter:__editorsyntaxhighlighter__.EditorSyntaxHighlighter)->None: pass

  def unregister_syntax_highlighter(self, syntax_highlighter:__editorsyntaxhighlighter__.EditorSyntaxHighlighter)->None: pass

  def goto_line(self, line_number:int)->None: pass

  def get_current_script(self)->__scriptextension__.ScriptExtension|__script__.Script|__gdscript__.GDScript: pass

  def get_open_scripts(self)->typedarray::Script: pass

  def open_script_create_dialog(self, base_name:str, base_path:str)->None: pass

  def goto_help(self, topic:str)->None: pass

  def update_docs_from_script(self, script:__script__.Script)->None: pass


