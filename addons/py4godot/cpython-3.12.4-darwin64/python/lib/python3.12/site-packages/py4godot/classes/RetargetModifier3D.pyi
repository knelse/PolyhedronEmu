from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SkeletonProfileHumanoid as __skeletonprofilehumanoid__
import py4godot.classes.SkeletonModifier3D as __skeletonmodifier3d__
import py4godot.classes.SkeletonProfile as __skeletonprofile__


class TransformFlag:
  TRANSFORM_FLAG_POSITION:int = 1
  TRANSFORM_FLAG_ROTATION:int = 2
  TRANSFORM_FLAG_SCALE:int = 4
  TRANSFORM_FLAG_ALL:int = 7


class RetargetModifier3D(__skeletonmodifier3d__.SkeletonModifier3D):

  @staticmethod
  def constructor()->RetargetModifier3D:pass



  @staticmethod
  def cast(other:__object__.Object)->RetargetModifier3D:pass


  @property
  def profile(self)->__skeletonprofilehumanoid__.SkeletonProfileHumanoid|__skeletonprofile__.SkeletonProfile: pass
  @profile.setter
  def profile(self,  value:__skeletonprofile__.SkeletonProfile)->None: pass
  @property
  def use_global_pose(self)->bool: pass
  @use_global_pose.setter
  def use_global_pose(self,  value:bool)->None: pass
  @property
  def enable(self)->int: pass
  @enable.setter
  def enable(self,  value:int)->None: pass
  def set_profile(self, profile:__skeletonprofile__.SkeletonProfile)->None: pass

  def get_profile(self)->__skeletonprofilehumanoid__.SkeletonProfileHumanoid|__skeletonprofile__.SkeletonProfile: pass

  def set_use_global_pose(self, use_global_pose:bool)->None: pass

  def is_using_global_pose(self)->bool: pass

  def set_enable_flags(self, enable_flags:int)->None: pass

  def get_enable_flags(self)->int: pass

  def set_position_enabled(self, enabled:bool)->None: pass

  def is_position_enabled(self)->bool: pass

  def set_rotation_enabled(self, enabled:bool)->None: pass

  def is_rotation_enabled(self)->bool: pass

  def set_scale_enabled(self, enabled:bool)->None: pass

  def is_scale_enabled(self)->bool: pass


