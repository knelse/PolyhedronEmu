from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.Image as __image__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.Texture as __texture__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.CompressedCubemap as __compressedcubemap__


class LayeredType:
  LAYERED_KIND_2D_ARRAY:int = 0
  LAYERED_KIND_CUBEMAP:int = 1
  LAYERED_KIND_CUBEMAP_ARRAY:int = 2


class TextureLayered(__texture__.Texture):

  @staticmethod
  def constructor()->TextureLayered:pass



  @staticmethod
  def cast(other:__object__.Object)->TextureLayered:pass


  def _get_format(self)->int: pass

  def _get_layered_type(self)->int: pass

  def _get_width(self)->int: pass

  def _get_height(self)->int: pass

  def _get_layers(self)->int: pass

  def _has_mipmaps(self)->bool: pass

  def _get_layer_data(self, layer_index:int)->__image__.Image: pass

  def get_format(self)->int: pass

  def get_layered_type(self)->int: pass

  def get_width(self)->int: pass

  def get_height(self)->int: pass

  def get_layers(self)->int: pass

  def has_mipmaps(self)->bool: pass

  def get_layer_data(self, layer:int)->__image__.Image: pass


