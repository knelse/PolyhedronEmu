from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRPositionalTracker as __xrpositionaltracker__
import py4godot.classes.XRControllerTracker as __xrcontrollertracker__
import py4godot.classes.XRHandTracker as __xrhandtracker__
import py4godot.classes.XRNode3D as __xrnode3d__
import py4godot.classes.XRBodyTracker as __xrbodytracker__



class XRController3D(__xrnode3d__.XRNode3D):
  button_pressed: BuiltinSignal
  button_released: BuiltinSignal
  input_float_changed: BuiltinSignal
  input_vector2_changed: BuiltinSignal
  profile_changed: BuiltinSignal

  @staticmethod
  def constructor()->XRController3D:pass



  @staticmethod
  def cast(other:__object__.Object)->XRController3D:pass


  def is_button_pressed(self, name:__core__.StringName|str)->bool: pass

  def get_input(self, name:__core__.StringName|str)->object: pass

  def get_float(self, name:__core__.StringName|str)->float: pass

  def get_vector2(self, name:__core__.StringName|str)->__core__.Vector2: pass

  def get_tracker_hand(self)->int: pass


