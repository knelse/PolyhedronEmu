from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.VisualShader as __visualshader__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.Texture as __texture__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.Resource as __resource__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.Shader as __shader__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.CompressedCubemap as __compressedcubemap__


class Mode:
  MODE_SPATIAL:int = 0
  MODE_CANVAS_ITEM:int = 1
  MODE_PARTICLES:int = 2
  MODE_SKY:int = 3
  MODE_FOG:int = 4


class Shader(__resource__.Resource):

  @staticmethod
  def constructor()->Shader:pass



  @staticmethod
  def cast(other:__object__.Object)->Shader:pass


  @property
  def code(self)->str: pass
  @code.setter
  def code(self,  value:str)->None: pass
  def get_mode(self)->int: pass

  def set_code(self, code:str)->None: pass

  def get_code(self)->str: pass

  def set_default_texture_parameter(self, name:__core__.StringName|str, texture:__texture__.Texture, index:int=0)->None: pass

  def get_default_texture_parameter(self, name:__core__.StringName|str, index:int=0)->__texture2drd__.Texture2DRD|__noisetexture3d__.NoiseTexture3D|__placeholdertexturelayered__.PlaceholderTextureLayered|__texturelayeredrd__.TextureLayeredRD|__texturecubemaprd__.TextureCubemapRD|__imagetexture3d__.ImageTexture3D|__imagetexturelayered__.ImageTextureLayered|__texture__.Texture|__placeholdertexture3d__.PlaceholderTexture3D|__compressedtexture2d__.CompressedTexture2D|__compressedtexture2darray__.CompressedTexture2DArray|__texture2d__.Texture2D|__gradienttexture1d__.GradientTexture1D|__noisetexture2d__.NoiseTexture2D|__texture3drd__.Texture3DRD|__placeholdertexture2darray__.PlaceholderTexture2DArray|__portablecompressedtexture2d__.PortableCompressedTexture2D|__placeholdercubemap__.PlaceholderCubemap|__texture2darray__.Texture2DArray|__cameratexture__.CameraTexture|__gradienttexture2d__.GradientTexture2D|__curvexyztexture__.CurveXYZTexture|__imagetexture__.ImageTexture|__curvetexture__.CurveTexture|__compressedtexture3d__.CompressedTexture3D|__texturecubemaparrayrd__.TextureCubemapArrayRD|__atlastexture__.AtlasTexture|__canvastexture__.CanvasTexture|__cubemap__.Cubemap|__compressedcubemaparray__.CompressedCubemapArray|__cubemaparray__.CubemapArray|__externaltexture__.ExternalTexture|__texture3d__.Texture3D|__placeholdertexture2d__.PlaceholderTexture2D|__compressedtexturelayered__.CompressedTextureLayered|__meshtexture__.MeshTexture|__texturelayered__.TextureLayered|__texture2darrayrd__.Texture2DArrayRD|__placeholdercubemaparray__.PlaceholderCubemapArray|__viewporttexture__.ViewportTexture|__animatedtexture__.AnimatedTexture|__compressedcubemap__.CompressedCubemap: pass

  def get_shader_uniform_list(self, get_groups:bool=False)->__core__.Array: pass

  def inspect_native_shader_code(self)->None: pass


