from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.AnimatedTexture as __animatedtexture__



class GraphNode(__graphelement__.GraphElement):
  slot_updated: BuiltinSignal

  @staticmethod
  def constructor()->GraphNode:pass



  @staticmethod
  def cast(other:__object__.Object)->GraphNode:pass


  @property
  def title(self)->str: pass
  @title.setter
  def title(self,  value:str)->None: pass
  @property
  def ignore_invalid_connection_type(self)->bool: pass
  @ignore_invalid_connection_type.setter
  def ignore_invalid_connection_type(self,  value:bool)->None: pass
  def _draw_port(self, slot_index:int, position:__core__.Vector2i, left:bool, color:__core__.Color)->None: pass

  def set_title(self, title:str)->None: pass

  def get_title(self)->str: pass

  def get_titlebar_hbox(self)->__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__hboxcontainer__.HBoxContainer|__editorscriptpicker__.EditorScriptPicker|__editortoaster__.EditorToaster|__editorresourcepicker__.EditorResourcePicker: pass

  def set_slot(self, slot_index:int, enable_left_port:bool, type_left:int, color_left:__core__.Color, enable_right_port:bool, type_right:int, color_right:__core__.Color, custom_icon_left:__texture2d__.Texture2D= __texture2d__.Texture2D.constructor(), custom_icon_right:__texture2d__.Texture2D= __texture2d__.Texture2D.constructor(), draw_stylebox:bool=True)->None: pass

  def clear_slot(self, slot_index:int)->None: pass

  def clear_all_slots(self)->None: pass

  def is_slot_enabled_left(self, slot_index:int)->bool: pass

  def set_slot_enabled_left(self, slot_index:int, enable:bool)->None: pass

  def set_slot_type_left(self, slot_index:int, type:int)->None: pass

  def get_slot_type_left(self, slot_index:int)->int: pass

  def set_slot_color_left(self, slot_index:int, color:__core__.Color)->None: pass

  def get_slot_color_left(self, slot_index:int)->__core__.Color: pass

  def set_slot_custom_icon_left(self, slot_index:int, custom_icon:__texture2d__.Texture2D)->None: pass

  def get_slot_custom_icon_left(self, slot_index:int)->__cameratexture__.CameraTexture|__gradienttexture2d__.GradientTexture2D|__texture2drd__.Texture2DRD|__curvexyztexture__.CurveXYZTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__canvastexture__.CanvasTexture|__viewporttexture__.ViewportTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__meshtexture__.MeshTexture|__compressedtexture2d__.CompressedTexture2D|__texture2d__.Texture2D|__imagetexture__.ImageTexture|__animatedtexture__.AnimatedTexture|__gradienttexture1d__.GradientTexture1D|__noisetexture2d__.NoiseTexture2D|__portablecompressedtexture2d__.PortableCompressedTexture2D: pass

  def is_slot_enabled_right(self, slot_index:int)->bool: pass

  def set_slot_enabled_right(self, slot_index:int, enable:bool)->None: pass

  def set_slot_type_right(self, slot_index:int, type:int)->None: pass

  def get_slot_type_right(self, slot_index:int)->int: pass

  def set_slot_color_right(self, slot_index:int, color:__core__.Color)->None: pass

  def get_slot_color_right(self, slot_index:int)->__core__.Color: pass

  def set_slot_custom_icon_right(self, slot_index:int, custom_icon:__texture2d__.Texture2D)->None: pass

  def get_slot_custom_icon_right(self, slot_index:int)->__cameratexture__.CameraTexture|__gradienttexture2d__.GradientTexture2D|__texture2drd__.Texture2DRD|__curvexyztexture__.CurveXYZTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__canvastexture__.CanvasTexture|__viewporttexture__.ViewportTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__meshtexture__.MeshTexture|__compressedtexture2d__.CompressedTexture2D|__texture2d__.Texture2D|__imagetexture__.ImageTexture|__animatedtexture__.AnimatedTexture|__gradienttexture1d__.GradientTexture1D|__noisetexture2d__.NoiseTexture2D|__portablecompressedtexture2d__.PortableCompressedTexture2D: pass

  def is_slot_draw_stylebox(self, slot_index:int)->bool: pass

  def set_slot_draw_stylebox(self, slot_index:int, enable:bool)->None: pass

  def set_ignore_invalid_connection_type(self, ignore:bool)->None: pass

  def is_ignoring_valid_connection_type(self)->bool: pass

  def get_input_port_count(self)->int: pass

  def get_input_port_position(self, port_idx:int)->__core__.Vector2: pass

  def get_input_port_type(self, port_idx:int)->int: pass

  def get_input_port_color(self, port_idx:int)->__core__.Color: pass

  def get_input_port_slot(self, port_idx:int)->int: pass

  def get_output_port_count(self)->int: pass

  def get_output_port_position(self, port_idx:int)->__core__.Vector2: pass

  def get_output_port_type(self, port_idx:int)->int: pass

  def get_output_port_color(self, port_idx:int)->__core__.Color: pass

  def get_output_port_slot(self, port_idx:int)->int: pass


