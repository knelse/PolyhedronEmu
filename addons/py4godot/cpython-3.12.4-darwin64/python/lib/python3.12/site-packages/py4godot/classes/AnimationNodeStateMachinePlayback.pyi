from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.m as __m__
import py4godot.classes.e as __e__
import py4godot.classes.d as __d__
import py4godot.classes.S as __s__
import py4godot.classes.g as __g__
import py4godot.classes.Resource as __resource__
import py4godot.classes.i as __i__
import py4godot.classes.a as __a__
import py4godot.classes.p as __p__
import py4godot.classes.n as __n__
import py4godot.classes.y as __y__
import py4godot.classes.t as __t__
import py4godot.classes.N as __n__
import py4godot.classes.T as __t__
import py4godot.classes.A as __a__
import py4godot.classes.r as __r__



class AnimationNodeStateMachinePlayback(__resource__.Resource):

  @staticmethod
  def constructor()->AnimationNodeStateMachinePlayback:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimationNodeStateMachinePlayback:pass


  def travel(self, to_node:__core__.StringName|str, reset_on_teleport:bool=True)->None: pass

  def start(self, node:__core__.StringName|str, reset:bool=True)->None: pass

  def next(self)->None: pass

  def stop(self)->None: pass

  def is_playing(self)->bool: pass

  def get_current_node(self)->__core__.StringName: pass

  def get_current_play_position(self)->float: pass

  def get_current_length(self)->float: pass

  def get_fading_from_node(self)->__core__.StringName: pass

  def get_travel_path(self)->typedarray::StringName: pass


