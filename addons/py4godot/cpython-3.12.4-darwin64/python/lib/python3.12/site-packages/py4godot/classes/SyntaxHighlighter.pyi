from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.Resource as __resource__



class SyntaxHighlighter(__resource__.Resource):

  @staticmethod
  def constructor()->SyntaxHighlighter:pass



  @staticmethod
  def cast(other:__object__.Object)->SyntaxHighlighter:pass


  def _get_line_syntax_highlighting(self, line:int)->__core__.Dictionary: pass

  def _clear_highlighting_cache(self)->None: pass

  def _update_cache(self)->None: pass

  def get_line_syntax_highlighting(self, line:int)->__core__.Dictionary: pass

  def update_cache(self)->None: pass

  def clear_highlighting_cache(self)->None: pass

  def get_text_edit(self)->__textedit__.TextEdit|__codeedit__.CodeEdit: pass


