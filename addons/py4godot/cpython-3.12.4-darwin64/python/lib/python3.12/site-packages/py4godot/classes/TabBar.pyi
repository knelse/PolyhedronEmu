from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.LinkButton as __linkbutton__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.Range as __range__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.Tree as __tree__
import py4godot.classes.Button as __button__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.Container as __container__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.OptionButton as __optionbutton__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.Control as __control__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.Label as __label__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.Separator as __separator__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.GridContainer as __gridcontainer__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.Panel as __panel__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.Slider as __slider__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.MenuBar as __menubar__


class AlignmentMode:
  ALIGNMENT_LEFT:int = 0
  ALIGNMENT_CENTER:int = 1
  ALIGNMENT_RIGHT:int = 2
  ALIGNMENT_MAX:int = 3
class CloseButtonDisplayPolicy:
  CLOSE_BUTTON_SHOW_NEVER:int = 0
  CLOSE_BUTTON_SHOW_ACTIVE_ONLY:int = 1
  CLOSE_BUTTON_SHOW_ALWAYS:int = 2
  CLOSE_BUTTON_MAX:int = 3


class TabBar(__control__.Control):
  tab_selected: BuiltinSignal
  tab_changed: BuiltinSignal
  tab_clicked: BuiltinSignal
  tab_rmb_clicked: BuiltinSignal
  tab_close_pressed: BuiltinSignal
  tab_button_pressed: BuiltinSignal
  tab_hovered: BuiltinSignal
  active_tab_rearranged: BuiltinSignal

  @staticmethod
  def constructor()->TabBar:pass



  @staticmethod
  def cast(other:__object__.Object)->TabBar:pass


  @property
  def current_tab(self)->int: pass
  @current_tab.setter
  def current_tab(self,  value:int)->None: pass
  @property
  def tab_alignment(self)->int: pass
  @tab_alignment.setter
  def tab_alignment(self,  value:int)->None: pass
  @property
  def clip_tabs(self)->bool: pass
  @clip_tabs.setter
  def clip_tabs(self,  value:bool)->None: pass
  @property
  def tab_close_display_policy(self)->int: pass
  @tab_close_display_policy.setter
  def tab_close_display_policy(self,  value:int)->None: pass
  @property
  def max_tab_width(self)->int: pass
  @max_tab_width.setter
  def max_tab_width(self,  value:int)->None: pass
  @property
  def scrolling_enabled(self)->bool: pass
  @scrolling_enabled.setter
  def scrolling_enabled(self,  value:bool)->None: pass
  @property
  def drag_to_rearrange_enabled(self)->bool: pass
  @drag_to_rearrange_enabled.setter
  def drag_to_rearrange_enabled(self,  value:bool)->None: pass
  @property
  def tabs_rearrange_group(self)->int: pass
  @tabs_rearrange_group.setter
  def tabs_rearrange_group(self,  value:int)->None: pass
  @property
  def scroll_to_selected(self)->bool: pass
  @scroll_to_selected.setter
  def scroll_to_selected(self,  value:bool)->None: pass
  @property
  def select_with_rmb(self)->bool: pass
  @select_with_rmb.setter
  def select_with_rmb(self,  value:bool)->None: pass
  @property
  def deselect_enabled(self)->bool: pass
  @deselect_enabled.setter
  def deselect_enabled(self,  value:bool)->None: pass
  @property
  def tab_count(self)->int: pass
  @tab_count.setter
  def tab_count(self,  value:int)->None: pass
  def set_tab_count(self, count:int)->None: pass

  def get_tab_count(self)->int: pass

  def set_current_tab(self, tab_idx:int)->None: pass

  def get_current_tab(self)->int: pass

  def get_previous_tab(self)->int: pass

  def select_previous_available(self)->bool: pass

  def select_next_available(self)->bool: pass

  def set_tab_title(self, tab_idx:int, title:str)->None: pass

  def get_tab_title(self, tab_idx:int)->str: pass

  def set_tab_tooltip(self, tab_idx:int, tooltip:str)->None: pass

  def get_tab_tooltip(self, tab_idx:int)->str: pass

  def set_tab_text_direction(self, tab_idx:int, direction:int )->None: pass

  def get_tab_text_direction(self, tab_idx:int)->int: pass

  def set_tab_language(self, tab_idx:int, language:str)->None: pass

  def get_tab_language(self, tab_idx:int)->str: pass

  def set_tab_icon(self, tab_idx:int, icon:__texture2d__.Texture2D)->None: pass

  def get_tab_icon(self, tab_idx:int)->__cameratexture__.CameraTexture|__gradienttexture2d__.GradientTexture2D|__texture2drd__.Texture2DRD|__curvexyztexture__.CurveXYZTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__canvastexture__.CanvasTexture|__viewporttexture__.ViewportTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__meshtexture__.MeshTexture|__compressedtexture2d__.CompressedTexture2D|__texture2d__.Texture2D|__imagetexture__.ImageTexture|__animatedtexture__.AnimatedTexture|__gradienttexture1d__.GradientTexture1D|__noisetexture2d__.NoiseTexture2D|__portablecompressedtexture2d__.PortableCompressedTexture2D: pass

  def set_tab_icon_max_width(self, tab_idx:int, width:int)->None: pass

  def get_tab_icon_max_width(self, tab_idx:int)->int: pass

  def set_tab_button_icon(self, tab_idx:int, icon:__texture2d__.Texture2D)->None: pass

  def get_tab_button_icon(self, tab_idx:int)->__cameratexture__.CameraTexture|__gradienttexture2d__.GradientTexture2D|__texture2drd__.Texture2DRD|__curvexyztexture__.CurveXYZTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__canvastexture__.CanvasTexture|__viewporttexture__.ViewportTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__meshtexture__.MeshTexture|__compressedtexture2d__.CompressedTexture2D|__texture2d__.Texture2D|__imagetexture__.ImageTexture|__animatedtexture__.AnimatedTexture|__gradienttexture1d__.GradientTexture1D|__noisetexture2d__.NoiseTexture2D|__portablecompressedtexture2d__.PortableCompressedTexture2D: pass

  def set_tab_disabled(self, tab_idx:int, disabled:bool)->None: pass

  def is_tab_disabled(self, tab_idx:int)->bool: pass

  def set_tab_hidden(self, tab_idx:int, hidden:bool)->None: pass

  def is_tab_hidden(self, tab_idx:int)->bool: pass

  def set_tab_metadata(self, tab_idx:int, metadata:object)->None: pass

  def get_tab_metadata(self, tab_idx:int)->object: pass

  def remove_tab(self, tab_idx:int)->None: pass

  def add_tab(self, title:str= __core__.String.new0(), icon:__texture2d__.Texture2D= __texture2d__.Texture2D.constructor())->None: pass

  def get_tab_idx_at_point(self, point:__core__.Vector2)->int: pass

  def set_tab_alignment(self, alignment:int )->None: pass

  def get_tab_alignment(self)->int: pass

  def set_clip_tabs(self, clip_tabs:bool)->None: pass

  def get_clip_tabs(self)->bool: pass

  def get_tab_offset(self)->int: pass

  def get_offset_buttons_visible(self)->bool: pass

  def ensure_tab_visible(self, idx:int)->None: pass

  def get_tab_rect(self, tab_idx:int)->__core__.Rect2: pass

  def move_tab(self, from_:int, to:int)->None: pass

  def set_tab_close_display_policy(self, policy:int )->None: pass

  def get_tab_close_display_policy(self)->int: pass

  def set_max_tab_width(self, width:int)->None: pass

  def get_max_tab_width(self)->int: pass

  def set_scrolling_enabled(self, enabled:bool)->None: pass

  def get_scrolling_enabled(self)->bool: pass

  def set_drag_to_rearrange_enabled(self, enabled:bool)->None: pass

  def get_drag_to_rearrange_enabled(self)->bool: pass

  def set_tabs_rearrange_group(self, group_id:int)->None: pass

  def get_tabs_rearrange_group(self)->int: pass

  def set_scroll_to_selected(self, enabled:bool)->None: pass

  def get_scroll_to_selected(self)->bool: pass

  def set_select_with_rmb(self, enabled:bool)->None: pass

  def get_select_with_rmb(self)->bool: pass

  def set_deselect_enabled(self, enabled:bool)->None: pass

  def get_deselect_enabled(self)->bool: pass

  def clear_tabs(self)->None: pass


