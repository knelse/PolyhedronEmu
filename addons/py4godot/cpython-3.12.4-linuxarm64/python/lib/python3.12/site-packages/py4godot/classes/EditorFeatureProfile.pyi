from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.EditorFeatureProfile as __editorfeatureprofile__


class Feature:
  FEATURE_3D:int = 0
  FEATURE_SCRIPT:int = 1
  FEATURE_ASSET_LIB:int = 2
  FEATURE_SCENE_TREE:int = 3
  FEATURE_NODE_DOCK:int = 4
  FEATURE_FILESYSTEM_DOCK:int = 5
  FEATURE_IMPORT_DOCK:int = 6
  FEATURE_HISTORY_DOCK:int = 7
  FEATURE_GAME:int = 8
  FEATURE_MAX:int = 9


class EditorFeatureProfile(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->EditorFeatureProfile:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorFeatureProfile:pass


  def set_disable_class(self, class_name:__core__.StringName|str, disable:bool)->None: pass

  def is_class_disabled(self, class_name:__core__.StringName|str)->bool: pass

  def set_disable_class_editor(self, class_name:__core__.StringName|str, disable:bool)->None: pass

  def is_class_editor_disabled(self, class_name:__core__.StringName|str)->bool: pass

  def set_disable_class_property(self, class_name:__core__.StringName|str, property:__core__.StringName|str, disable:bool)->None: pass

  def is_class_property_disabled(self, class_name:__core__.StringName|str, property:__core__.StringName|str)->bool: pass

  def set_disable_feature(self, feature:int , disable:bool)->None: pass

  def is_feature_disabled(self, feature:int )->bool: pass

  def get_feature_name(self, feature:int )->str: pass

  def save_to_file(self, path:str)->int: pass

  def load_from_file(self, path:str)->int: pass


