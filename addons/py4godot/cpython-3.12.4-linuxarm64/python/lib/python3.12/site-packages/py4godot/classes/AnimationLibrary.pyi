from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.e as __e__
import py4godot.classes.n as __n__
import py4godot.classes.Resource as __resource__
import py4godot.classes.m as __m__
import py4godot.classes.d as __d__
import py4godot.classes.g as __g__
import py4godot.classes.t as __t__
import py4godot.classes.i as __i__
import py4godot.classes.p as __p__
import py4godot.classes.S as __s__
import py4godot.classes.y as __y__
import py4godot.classes.Animation as __animation__
import py4godot.classes.A as __a__
import py4godot.classes.N as __n__
import py4godot.classes.r as __r__
import py4godot.classes.T as __t__
import py4godot.classes.a as __a__



class AnimationLibrary(__resource__.Resource):
  animation_added: BuiltinSignal
  animation_removed: BuiltinSignal
  animation_renamed: BuiltinSignal
  animation_changed: BuiltinSignal

  @staticmethod
  def constructor()->AnimationLibrary:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimationLibrary:pass


  def add_animation(self, name:__core__.StringName|str, animation:__animation__.Animation)->int: pass

  def remove_animation(self, name:__core__.StringName|str)->None: pass

  def rename_animation(self, name:__core__.StringName|str, newname:__core__.StringName|str)->None: pass

  def has_animation(self, name:__core__.StringName|str)->bool: pass

  def get_animation(self, name:__core__.StringName|str)->__animation__.Animation: pass

  def get_animation_list(self)->typedarray::StringName: pass

  def get_animation_list_size(self)->int: pass


