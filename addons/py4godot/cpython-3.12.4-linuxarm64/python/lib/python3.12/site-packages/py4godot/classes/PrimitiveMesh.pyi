from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ParticleProcessMaterial as __particleprocessmaterial__
import py4godot.classes.PlaceholderMaterial as __placeholdermaterial__
import py4godot.classes.ProceduralSkyMaterial as __proceduralskymaterial__
import py4godot.classes.ORMMaterial3D as __ormmaterial3d__
import py4godot.classes.ShaderMaterial as __shadermaterial__
import py4godot.classes.PanoramaSkyMaterial as __panoramaskymaterial__
import py4godot.classes.PhysicalSkyMaterial as __physicalskymaterial__
import py4godot.classes.Mesh as __mesh__
import py4godot.classes.BaseMaterial3D as __basematerial3d__
import py4godot.classes.StandardMaterial3D as __standardmaterial3d__
import py4godot.classes.CanvasItemMaterial as __canvasitemmaterial__
import py4godot.classes.FogMaterial as __fogmaterial__
import py4godot.classes.Material as __material__



class PrimitiveMesh(__mesh__.Mesh):

  @staticmethod
  def constructor()->PrimitiveMesh:pass



  @staticmethod
  def cast(other:__object__.Object)->PrimitiveMesh:pass


  @property
  def material(self)->BaseMaterial3D,ShaderMaterial: pass
  @material.setter
  def material(self,  value:__basematerial3d__.BaseMaterial3D)->None: pass
  @property
  def custom_aabb(self)->__core__.AABB: pass
  @custom_aabb.setter
  def custom_aabb(self,  value:__core__.AABB)->None: pass
  @property
  def flip_faces(self)->bool: pass
  @flip_faces.setter
  def flip_faces(self,  value:bool)->None: pass
  @property
  def add_uv2(self)->bool: pass
  @add_uv2.setter
  def add_uv2(self,  value:bool)->None: pass
  @property
  def uv2_padding(self)->float: pass
  @uv2_padding.setter
  def uv2_padding(self,  value:float)->None: pass
  def _create_mesh_array(self)->__core__.Array: pass

  def set_material(self, material:__material__.Material)->None: pass

  def get_material(self)->__particleprocessmaterial__.ParticleProcessMaterial|__placeholdermaterial__.PlaceholderMaterial|__proceduralskymaterial__.ProceduralSkyMaterial|__ormmaterial3d__.ORMMaterial3D|__shadermaterial__.ShaderMaterial|__panoramaskymaterial__.PanoramaSkyMaterial|__physicalskymaterial__.PhysicalSkyMaterial|__basematerial3d__.BaseMaterial3D|__standardmaterial3d__.StandardMaterial3D|__canvasitemmaterial__.CanvasItemMaterial|__fogmaterial__.FogMaterial|__material__.Material: pass

  def get_mesh_arrays(self)->__core__.Array: pass

  def set_custom_aabb(self, aabb:__core__.AABB)->None: pass

  def get_custom_aabb(self)->__core__.AABB: pass

  def set_flip_faces(self, flip_faces:bool)->None: pass

  def get_flip_faces(self)->bool: pass

  def set_add_uv2(self, add_uv2:bool)->None: pass

  def get_add_uv2(self)->bool: pass

  def set_uv2_padding(self, uv2_padding:float)->None: pass

  def get_uv2_padding(self)->float: pass

  def request_update(self)->None: pass


