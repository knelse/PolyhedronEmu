from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.Texture2DRD as __texture2drd__



class AtlasTexture(__texture2d__.Texture2D):

  @staticmethod
  def constructor()->AtlasTexture:pass



  @staticmethod
  def cast(other:__object__.Object)->AtlasTexture:pass


  @property
  def atlas(self)->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__gradienttexture2d__.GradientTexture2D|__imagetexture__.ImageTexture|__atlastexture__.AtlasTexture|__animatedtexture__.AnimatedTexture|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__cameratexture__.CameraTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__compressedtexture2d__.CompressedTexture2D|__curvexyztexture__.CurveXYZTexture|__meshtexture__.MeshTexture|__viewporttexture__.ViewportTexture|__curvetexture__.CurveTexture|__gradienttexture1d__.GradientTexture1D|__texture2drd__.Texture2DRD: pass
  @atlas.setter
  def atlas(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def region(self)->__core__.Rect2: pass
  @region.setter
  def region(self,  value:__core__.Rect2)->None: pass
  @property
  def margin(self)->__core__.Rect2: pass
  @margin.setter
  def margin(self,  value:__core__.Rect2)->None: pass
  @property
  def filter_clip(self)->bool: pass
  @filter_clip.setter
  def filter_clip(self,  value:bool)->None: pass
  def set_atlas(self, atlas:__texture2d__.Texture2D)->None: pass

  def get_atlas(self)->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__gradienttexture2d__.GradientTexture2D|__imagetexture__.ImageTexture|__atlastexture__.AtlasTexture|__animatedtexture__.AnimatedTexture|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__cameratexture__.CameraTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__compressedtexture2d__.CompressedTexture2D|__curvexyztexture__.CurveXYZTexture|__meshtexture__.MeshTexture|__viewporttexture__.ViewportTexture|__curvetexture__.CurveTexture|__gradienttexture1d__.GradientTexture1D|__texture2drd__.Texture2DRD: pass

  def set_region(self, region:__core__.Rect2)->None: pass

  def get_region(self)->__core__.Rect2: pass

  def set_margin(self, margin:__core__.Rect2)->None: pass

  def get_margin(self)->__core__.Rect2: pass

  def set_filter_clip(self, enable:bool)->None: pass

  def has_filter_clip(self)->bool: pass


