from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.Theme as __theme__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.FontFile as __fontfile__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.Font as __font__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.StyleBoxTexture as __styleboxtexture__
import py4godot.classes.StyleBoxEmpty as __styleboxempty__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.StyleBoxLine as __styleboxline__
import py4godot.classes.FontVariation as __fontvariation__
import py4godot.classes.SystemFont as __systemfont__
import py4godot.classes.StyleBoxFlat as __styleboxflat__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.Resource as __resource__
import py4godot.classes.StyleBox as __stylebox__


class DataType:
  DATA_KIND_COLOR:int = 0
  DATA_KIND_CONSTANT:int = 1
  DATA_KIND_FONT:int = 2
  DATA_KIND_FONT_SIZE:int = 3
  DATA_KIND_ICON:int = 4
  DATA_KIND_STYLEBOX:int = 5
  DATA_KIND_MAX:int = 6


class Theme(__resource__.Resource):

  @staticmethod
  def constructor()->Theme:pass



  @staticmethod
  def cast(other:__object__.Object)->Theme:pass


  @property
  def default_base_scale(self)->float: pass
  @default_base_scale.setter
  def default_base_scale(self,  value:float)->None: pass
  @property
  def default_font(self)->__fontfile__.FontFile|__font__.Font|__fontvariation__.FontVariation|__systemfont__.SystemFont: pass
  @default_font.setter
  def default_font(self,  value:__font__.Font)->None: pass
  @property
  def default_font_size(self)->int: pass
  @default_font_size.setter
  def default_font_size(self,  value:int)->None: pass
  def set_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, texture:__texture2d__.Texture2D)->None: pass

  def get_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__gradienttexture2d__.GradientTexture2D|__imagetexture__.ImageTexture|__atlastexture__.AtlasTexture|__animatedtexture__.AnimatedTexture|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__cameratexture__.CameraTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__compressedtexture2d__.CompressedTexture2D|__curvexyztexture__.CurveXYZTexture|__meshtexture__.MeshTexture|__viewporttexture__.ViewportTexture|__curvetexture__.CurveTexture|__gradienttexture1d__.GradientTexture1D|__texture2drd__.Texture2DRD: pass

  def has_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_icon(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_icon_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_icon_type_list(self)->__core__.PackedStringArray: pass

  def set_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, texture:__stylebox__.StyleBox)->None: pass

  def get_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->__styleboxline__.StyleBoxLine|__styleboxflat__.StyleBoxFlat|__stylebox__.StyleBox|__styleboxtexture__.StyleBoxTexture|__styleboxempty__.StyleBoxEmpty: pass

  def has_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_stylebox(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_stylebox_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_stylebox_type_list(self)->__core__.PackedStringArray: pass

  def set_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, font:__font__.Font)->None: pass

  def get_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->__fontfile__.FontFile|__font__.Font|__fontvariation__.FontVariation|__systemfont__.SystemFont: pass

  def has_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_font(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_font_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_font_type_list(self)->__core__.PackedStringArray: pass

  def set_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, font_size:int)->None: pass

  def get_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->int: pass

  def has_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_font_size(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_font_size_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_font_size_type_list(self)->__core__.PackedStringArray: pass

  def set_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, color:__core__.Color)->None: pass

  def get_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->__core__.Color: pass

  def has_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_color(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_color_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_color_type_list(self)->__core__.PackedStringArray: pass

  def set_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str, constant:int)->None: pass

  def get_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->int: pass

  def has_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_constant(self, old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_constant_list(self, theme_type:str)->__core__.PackedStringArray: pass

  def get_constant_type_list(self)->__core__.PackedStringArray: pass

  def set_default_base_scale(self, base_scale:float)->None: pass

  def get_default_base_scale(self)->float: pass

  def has_default_base_scale(self)->bool: pass

  def set_default_font(self, font:__font__.Font)->None: pass

  def get_default_font(self)->__fontfile__.FontFile|__font__.Font|__fontvariation__.FontVariation|__systemfont__.SystemFont: pass

  def has_default_font(self)->bool: pass

  def set_default_font_size(self, font_size:int)->None: pass

  def get_default_font_size(self)->int: pass

  def has_default_font_size(self)->bool: pass

  def set_theme_item(self, data_type:int , name:__core__.StringName|str, theme_type:__core__.StringName|str, value:object)->None: pass

  def get_theme_item(self, data_type:int , name:__core__.StringName|str, theme_type:__core__.StringName|str)->object: pass

  def has_theme_item(self, data_type:int , name:__core__.StringName|str, theme_type:__core__.StringName|str)->bool: pass

  def rename_theme_item(self, data_type:int , old_name:__core__.StringName|str, name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def clear_theme_item(self, data_type:int , name:__core__.StringName|str, theme_type:__core__.StringName|str)->None: pass

  def get_theme_item_list(self, data_type:int , theme_type:str)->__core__.PackedStringArray: pass

  def get_theme_item_type_list(self, data_type:int )->__core__.PackedStringArray: pass

  def set_type_variation(self, theme_type:__core__.StringName|str, base_type:__core__.StringName|str)->None: pass

  def is_type_variation(self, theme_type:__core__.StringName|str, base_type:__core__.StringName|str)->bool: pass

  def clear_type_variation(self, theme_type:__core__.StringName|str)->None: pass

  def get_type_variation_base(self, theme_type:__core__.StringName|str)->__core__.StringName: pass

  def get_type_variation_list(self, base_type:__core__.StringName|str)->__core__.PackedStringArray: pass

  def add_type(self, theme_type:__core__.StringName|str)->None: pass

  def remove_type(self, theme_type:__core__.StringName|str)->None: pass

  def get_type_list(self)->__core__.PackedStringArray: pass

  def merge_with(self, other:__theme__.Theme)->None: pass

  def clear(self)->None: pass


