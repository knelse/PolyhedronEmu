from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.VisualInstance3D as __visualinstance3d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.Decal as __decal__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.Texture2DRD as __texture2drd__


class DecalTexture:
  TEXTURE_ALBEDO:int = 0
  TEXTURE_NORMAL:int = 1
  TEXTURE_ORM:int = 2
  TEXTURE_EMISSION:int = 3
  TEXTURE_MAX:int = 4


class Decal(__visualinstance3d__.VisualInstance3D):

  @staticmethod
  def constructor()->Decal:pass



  @staticmethod
  def cast(other:__object__.Object)->Decal:pass


  @property
  def size(self)->__core__.Vector3: pass
  @size.setter
  def size(self,  value:__core__.Vector3)->None: pass
  @property
  def texture_albedo(self)->Texture2D,-AnimatedTexture,-AtlasTexture,-CameraTexture,-CanvasTexture,-MeshTexture,-Texture2DRD,-ViewportTexture: pass
  @texture_albedo.setter
  def texture_albedo(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_normal(self)->Texture2D,-AnimatedTexture,-AtlasTexture,-CameraTexture,-CanvasTexture,-MeshTexture,-Texture2DRD,-ViewportTexture: pass
  @texture_normal.setter
  def texture_normal(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_orm(self)->Texture2D,-AnimatedTexture,-AtlasTexture,-CameraTexture,-CanvasTexture,-MeshTexture,-Texture2DRD,-ViewportTexture: pass
  @texture_orm.setter
  def texture_orm(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_emission(self)->Texture2D,-AnimatedTexture,-AtlasTexture,-CameraTexture,-CanvasTexture,-MeshTexture,-Texture2DRD,-ViewportTexture: pass
  @texture_emission.setter
  def texture_emission(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def emission_energy(self)->float: pass
  @emission_energy.setter
  def emission_energy(self,  value:float)->None: pass
  @property
  def modulate(self)->__core__.Color: pass
  @modulate.setter
  def modulate(self,  value:__core__.Color)->None: pass
  @property
  def albedo_mix(self)->float: pass
  @albedo_mix.setter
  def albedo_mix(self,  value:float)->None: pass
  @property
  def normal_fade(self)->float: pass
  @normal_fade.setter
  def normal_fade(self,  value:float)->None: pass
  @property
  def upper_fade(self)->float: pass
  @upper_fade.setter
  def upper_fade(self,  value:float)->None: pass
  @property
  def lower_fade(self)->float: pass
  @lower_fade.setter
  def lower_fade(self,  value:float)->None: pass
  @property
  def distance_fade_enabled(self)->bool: pass
  @distance_fade_enabled.setter
  def distance_fade_enabled(self,  value:bool)->None: pass
  @property
  def distance_fade_begin(self)->float: pass
  @distance_fade_begin.setter
  def distance_fade_begin(self,  value:float)->None: pass
  @property
  def distance_fade_length(self)->float: pass
  @distance_fade_length.setter
  def distance_fade_length(self,  value:float)->None: pass
  @property
  def cull_mask(self)->int: pass
  @cull_mask.setter
  def cull_mask(self,  value:int)->None: pass
  def set_size(self, size:__core__.Vector3)->None: pass

  def get_size(self)->__core__.Vector3: pass

  def set_texture(self, type:int , texture:__texture2d__.Texture2D)->None: pass

  def get_texture(self, type:int )->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__gradienttexture2d__.GradientTexture2D|__imagetexture__.ImageTexture|__atlastexture__.AtlasTexture|__animatedtexture__.AnimatedTexture|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__cameratexture__.CameraTexture|__externaltexture__.ExternalTexture|__placeholdertexture2d__.PlaceholderTexture2D|__compressedtexture2d__.CompressedTexture2D|__curvexyztexture__.CurveXYZTexture|__meshtexture__.MeshTexture|__viewporttexture__.ViewportTexture|__curvetexture__.CurveTexture|__gradienttexture1d__.GradientTexture1D|__texture2drd__.Texture2DRD: pass

  def set_emission_energy(self, energy:float)->None: pass

  def get_emission_energy(self)->float: pass

  def set_albedo_mix(self, energy:float)->None: pass

  def get_albedo_mix(self)->float: pass

  def set_modulate(self, color:__core__.Color)->None: pass

  def get_modulate(self)->__core__.Color: pass

  def set_upper_fade(self, fade:float)->None: pass

  def get_upper_fade(self)->float: pass

  def set_lower_fade(self, fade:float)->None: pass

  def get_lower_fade(self)->float: pass

  def set_normal_fade(self, fade:float)->None: pass

  def get_normal_fade(self)->float: pass

  def set_enable_distance_fade(self, enable:bool)->None: pass

  def is_distance_fade_enabled(self)->bool: pass

  def set_distance_fade_begin(self, distance:float)->None: pass

  def get_distance_fade_begin(self)->float: pass

  def set_distance_fade_length(self, distance:float)->None: pass

  def get_distance_fade_length(self)->float: pass

  def set_cull_mask(self, mask:int)->None: pass

  def get_cull_mask(self)->int: pass


