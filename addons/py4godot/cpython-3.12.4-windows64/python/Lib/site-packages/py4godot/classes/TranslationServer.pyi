from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object as __object__
import py4godot.classes.OptimizedTranslation as __optimizedtranslation__
import py4godot.classes.Translation as __translation__
import py4godot.classes.TranslationDomain as __translationdomain__



class TranslationServer(__object__.Object):



  @staticmethod
  def cast(other:__object__.Object)->TranslationServer:pass

  @staticmethod
  def instance()->TranslationServer:pass

  @property
  def pseudolocalization_enabled(self)->bool: pass
  @pseudolocalization_enabled.setter
  def pseudolocalization_enabled(self,  value:bool)->None: pass
  def set_locale(self, locale:str)->None: pass

  def get_locale(self)->str: pass

  def get_tool_locale(self)->str: pass

  def compare_locales(self, locale_a:str, locale_b:str)->int: pass

  def standardize_locale(self, locale:str, add_defaults:bool=False)->str: pass

  def get_all_languages(self)->__core__.PackedStringArray: pass

  def get_language_name(self, language:str)->str: pass

  def get_all_scripts(self)->__core__.PackedStringArray: pass

  def get_script_name(self, script:str)->str: pass

  def get_all_countries(self)->__core__.PackedStringArray: pass

  def get_country_name(self, country:str)->str: pass

  def get_locale_name(self, locale:str)->str: pass

  def translate(self, message:__core__.StringName|str, context:__core__.StringName|str= __core__.StringName.new0())->__core__.StringName: pass

  def translate_plural(self, message:__core__.StringName|str, plural_message:__core__.StringName|str, n:int, context:__core__.StringName|str= __core__.StringName.new0())->__core__.StringName: pass

  def add_translation(self, translation:__translation__.Translation)->None: pass

  def remove_translation(self, translation:__translation__.Translation)->None: pass

  def get_translation_object(self, locale:str)->__optimizedtranslation__.OptimizedTranslation|__translation__.Translation: pass

  def has_domain(self, domain:__core__.StringName|str)->bool: pass

  def get_or_add_domain(self, domain:__core__.StringName|str)->__translationdomain__.TranslationDomain: pass

  def remove_domain(self, domain:__core__.StringName|str)->None: pass

  def clear(self)->None: pass

  def get_loaded_locales(self)->__core__.PackedStringArray: pass

  def is_pseudolocalization_enabled(self)->bool: pass

  def set_pseudolocalization_enabled(self, enabled:bool)->None: pass

  def reload_pseudolocalization(self)->None: pass

  def pseudolocalize(self, message:__core__.StringName|str)->__core__.StringName: pass


