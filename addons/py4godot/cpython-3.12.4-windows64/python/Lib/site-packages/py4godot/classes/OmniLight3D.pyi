from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.OmniLight3D as __omnilight3d__
import py4godot.classes.Light3D as __light3d__


class ShadowMode:
  SHADOW_DUAL_PARABOLOID:int = 0
  SHADOW_CUBE:int = 1


class OmniLight3D(__light3d__.Light3D):

  @staticmethod
  def constructor()->OmniLight3D:pass



  @staticmethod
  def cast(other:__object__.Object)->OmniLight3D:pass


  @property
  def omni_range(self)->float: pass
  @omni_range.setter
  def omni_range(self,  value:float)->None: pass
  @property
  def omni_attenuation(self)->float: pass
  @omni_attenuation.setter
  def omni_attenuation(self,  value:float)->None: pass
  @property
  def omni_shadow_mode(self)->int: pass
  @omni_shadow_mode.setter
  def omni_shadow_mode(self,  value:int)->None: pass
  def set_shadow_mode(self, mode:int )->None: pass

  def get_shadow_mode(self)->int: pass


