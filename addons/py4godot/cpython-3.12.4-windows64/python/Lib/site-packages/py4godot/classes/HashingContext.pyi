from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.HashingContext as __hashingcontext__


class HashType:
  HASH_MD5:int = 0
  HASH_SHA1:int = 1
  HASH_SHA256:int = 2


class HashingContext(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->HashingContext:pass



  @staticmethod
  def cast(other:__object__.Object)->HashingContext:pass


  def start(self, type:int )->int: pass

  def update(self, chunk:__core__.PackedByteArray)->int: pass

  def finish(self)->__core__.PackedByteArray: pass


