from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.AudioSamplePlayback as __audiosampleplayback__



class AudioStreamPlayback(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->AudioStreamPlayback:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioStreamPlayback:pass


  def _start(self, from_pos:float)->None: pass

  def _stop(self)->None: pass

  def _is_playing(self)->bool: pass

  def _get_loop_count(self)->int: pass

  def _get_playback_position(self)->float: pass

  def _seek(self, position:float)->None: pass

  def _tag_used_streams(self)->None: pass

  def _set_parameter(self, name:__core__.StringName|str, value:object)->None: pass

  def _get_parameter(self, name:__core__.StringName|str)->object: pass

  def set_sample_playback(self, playback_sample:__audiosampleplayback__.AudioSamplePlayback)->None: pass

  def get_sample_playback(self)->__audiosampleplayback__.AudioSamplePlayback: pass

  def mix_audio(self, rate_scale:float, frames:int)->__core__.PackedVector2Array: pass

  def start(self, from_pos:float=0.0)->None: pass

  def seek(self, time:float=0.0)->None: pass

  def stop(self)->None: pass

  def get_loop_count(self)->int: pass

  def get_playback_position(self)->float: pass

  def is_playing(self)->bool: pass


