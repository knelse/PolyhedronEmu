from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.XMLParser as __xmlparser__


class NodeType:
  NODE_NONE:int = 0
  NODE_ELEMENT:int = 1
  NODE_ELEMENT_END:int = 2
  NODE_TEXT:int = 3
  NODE_COMMENT:int = 4
  NODE_CDATA:int = 5
  NODE_UNKNOWN:int = 6


class XMLParser(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->XMLParser:pass



  @staticmethod
  def cast(other:__object__.Object)->XMLParser:pass


  def read(self)->int: pass

  def get_node_type(self)->int: pass

  def get_node_name(self)->str: pass

  def get_node_data(self)->str: pass

  def get_node_offset(self)->int: pass

  def get_attribute_count(self)->int: pass

  def get_attribute_name(self, idx:int)->str: pass

  def get_attribute_value(self, idx:int)->str: pass

  def has_attribute(self, name:str)->bool: pass

  def get_named_attribute_value(self, name:str)->str: pass

  def get_named_attribute_value_safe(self, name:str)->str: pass

  def is_empty(self)->bool: pass

  def get_current_line(self)->int: pass

  def skip_section(self)->None: pass

  def seek(self, position:int)->int: pass

  def open(self, file:str)->int: pass

  def open_buffer(self, buffer:__core__.PackedByteArray)->int: pass


